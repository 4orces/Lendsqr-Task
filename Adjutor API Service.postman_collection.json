{
	"info": {
		"_postman_id": "421a4a6c-55eb-48ea-82c1-9b341eefb339",
		"name": "Adjutor API Service",
		"description": "Adjutor is the API service from Lendsqr provided via RESTful APIs. The services include the following:\n\n- Authorizing direct debit, with consent, for repayments\n    \n- Getting the bank accounts, with consent, tied to a customer's BVN\n    \n- Matching a customer image against what's on their BVN\n    \n- Getting the name and details of a bank account number\n    \n- Getting credit information about a borrower\n    \n- Getting \"probable\" fraud information from our Karma blacklist\n    \n- Accessing credit performance information, for a borrower, from the Lendsqr ecosystem\n    \n\n## Getting Started\n\nTo have access to our APIs is easy.\n\n1. [Sign up for a Lendsqr Adjutor account](https://app.adjutor.io/signup?source=adjutor-api-documentation)\n    \n2. Then create an app and select the services required fror the app\n    \n\n## Terms of Use\n\nTo use Lendsqr Adjutor APIs, you must agree to our terms of use. These terms outline the conditions under which you may access and use our API. Please review these terms carefully before using our API. If you have any questions or concerns about these terms, please contact us at [api@lendsqr.com](https://mailto:api@lendsqr.com).\n\n[You read about our terms here](https://adjutor.io/legal/terms-of-use).\n\n## Getting Support\n\nIf you require assistance at any time when using this documentation or the services, please email [api@lendsqr.com](https://mailto:api@lendsqr.com) and someone would be in touch with you as soon as possible. If you are currently using Lendsqr to lend, you can also contact your account manager at [growth@lendsqr.com](https://mailto:growth@lendsqr.com).\n\n---\n\n# Authentication\n\nAuthentication to the Adjutor API service is performed with the API key. Every endpoint requires authentication, so you will need to add the following header to each request:\n\n`Authorization: Bearer`\n\n`base_url: https://adjutor.lendsqr.com/v2/`\n\n---\n\n# Data Types\n\nAll of the API responses returned are in JSON format, with these data types defined below:\n\n| Type | Description |\n| --- | --- |\n| `string` | A UTF-8 encoded string |\n| `number` | An integer |\n| `datetime` | An ISO8601 encoded DateTime. All datetimes are returned in UTC with offset +00:00 |\n| `decimal` | All monetary values are returned with up to two decimal places and may be positive (20.78) or negative (-32.50) |\n\n# Data Length\n\n| Type | Description | Length |\n| --- | --- | --- |\n| Text fields | `string` | max-length 255 characters |\n| BVN | `integers` starting with 1 or 2 | 11 digits. |\n| Account Number | `integers` | 10 digits. |\n\n---\n\n# Response\n\n| Field | Type | Description |\n| --- | --- | --- |\n| data | `array` | The actual data items you have requested |\n| meta | `object` | Key/value information that is not essential to understanding the resources returned but offers additional detail |\n\n# Meta\n\n| Field | Type | Description |\n| --- | --- | --- |\n| cost | `number` | The cost for the API call in Naira |\n| balance | `number` | The remaining balance in your service wallet in Naira |\n\n---\n\n# Errors\n\nErrors are expressed as a combination of HTTP status codes and an accompanying JSON body providing required detail where possible. You should be able to rely on the HTTP status code alone to determine the cause of the problem.\n\n## Error Response Fields\n\n| Field | Type |\n| --- | --- |\n| message | `string` A human-readable message as to the specifics of the problem. For example, it may contain a detail description of what caused the problem |\n| status number | The HTTP status code used in the response |\n| error_code | `number` |\n\n---",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36588259"
	},
	"item": [
		{
			"name": "Validation",
			"item": [
				{
					"name": "Bank Verification Number",
					"item": [
						{
							"name": "Initialize BVN Consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contact\": \"08012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}verification/bvn/:bvn",
									"host": [
										"{{base_url}}verification"
									],
									"path": [
										"bvn",
										":bvn"
									],
									"variable": [
										{
											"key": "bvn",
											"value": ""
										}
									]
								},
								"description": "This endpoint is used to initiate the process for getting the customer's consent. The integrator is required to pass the customer's BVN and the phone number. If the phone number passed does not match the customer phone on record, an error is returned but with a masked collection of the correct phone and email on the customer account.\n\n#### Request Body\n\n| Field | Type | Description |\n| --- | --- | --- |\n| contact | `String` | The phone number or email of the customer. At the minimum, the phone number must be the one registered to the BVN (e.g., 08012345678, [ado@example.com](https://mailto:ado@example.com)). |"
							},
							"response": [
								{
									"name": "Initialize BVN",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"contact\": \"0808***2636\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://adjutor.lendsqr.com/v2/verification/bvn/:bvn",
											"protocol": "https",
											"host": [
												"adjutor",
												"lendsqr",
												"com"
											],
											"path": [
												"v2",
												"verification",
												"bvn",
												":bvn"
											],
											"variable": [
												{
													"key": "bvn",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 21 Feb 2024 07:04:59 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "91cddf27-e8c8-4475-a69f-41d3cfd2c78e"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 21 Feb 2024 07:04:38 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"75-9VH2gGmZSDLe6+ZLGrXFVt5sc5Y\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "858d22e9cc0a6622-AMS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"otp\",\n    \"message\": \"Please provide OTP sent to contact\",\n    \"data\": \"0808***2636\",\n    \"meta\": {\n        \"cost\": 0,\n        \"balance\": 4815\n    }\n}"
								}
							]
						},
						{
							"name": "Complete Consent and get BVN Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"otp\": \"623553\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}verification/bvn/:bvn",
									"host": [
										"{{base_url}}verification"
									],
									"path": [
										"bvn",
										":bvn"
									],
									"variable": [
										{
											"key": "bvn",
											"value": ""
										}
									]
								},
								"description": "This endpoint is used to get the BVN data after the customer's consent has been approved.\n\n### Response fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| reference | `integer` | Unique reference number (e.g., 10000001) |\n| bvn | `string` | Bank Verification Number (e.g., \"22123456789\") |\n| first_name | `string` | First name of the individual (e.g., \"ADO\") |\n| middle_name | `string` | Middle name of the individual (e.g., \"JOHN\") |\n| last_name | `string` | Last name of the individual (e.g., \"SULE\") |\n| dob | `date` | Date of birth in YYYY-MM-DD format (e.g., \"1990-10-31\") |\n| formatted_dob | `date` | Formatted date of birth (e.g., \"1990-10-31\") |\n| mobile2 | `string` | Secondary mobile number, if applicable (e.g., 08012345678) |\n| mobile | `string` | Primary mobile number (e.g., \"08012345678\") |\n| registration_date | `string` | Date of registration (e.g., \"30-Mar-2015\") |\n| enrollment_bank | `string` | Bank enrollment number (e.g., \"044\") |\n| enrollment_branch | `string` | Branch of enrollment (e.g., \"RET SHOP - BABCOCK UNIVERSITY (137)\") |\n| email | `string` | Email address (e.g., \"[wunmi@yahoo.com](https://mailto:wunmi@yahoo.com)\") |\n| gender | `string` | Gender (e.g., \"Male\") |\n| level_of_account | `string` | Level of account, if applicable (e.g., Tier 2) |\n| lga_of_origin | `string` | Local Government Area of origin (e.g., \"Abeokuta South\") |\n| lga_of_residence | `string` | Local Government Area of residence (e.g., \"Abeokuta South\") |\n| marital_status | `string` | Marital status (e.g., \"Single\") |\n| nin | `string` | National Identification Number, if applicable (e.g., 1234567890) |\n| name_on_card | `string` | Name as it appears on card (e.g., \"ADO JOHN SULE\") |\n| nationality | `string` | Nationality, if applicable (e.g., American) |\n| residential_address | `string` | Residential address (e.g., \"Ogun State\") |\n| state_of_origin | `string` | State of origin (e.g., \"Ogun State\") |\n| state_of_residence | `string` | State of residence (e.g., \"Ogun State\") |\n| watchlisted | `integer` | Watchlist status (e.g., 0 for not watchlisted) |\n| image_url | `string` | URL of the photo (e.g., \"[https://picsum.photos/id/1/5000/3333\"](https://picsum.photos/id/1/5000/3333)) |"
							},
							"response": [
								{
									"name": "Complete BVN Verification",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp\": \"242366\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://adjutor.lendsqr.com/v2/verification/bvn/:bvn",
											"protocol": "https",
											"host": [
												"adjutor",
												"lendsqr",
												"com"
											],
											"path": [
												"v2",
												"verification",
												"bvn",
												":bvn"
											],
											"variable": [
												{
													"key": "bvn",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 21 Feb 2024 07:05:26 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "e522b3f8-6d99-4a10-88e1-e4b962c1f854"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 21 Feb 2024 07:05:14 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"3de-C/X9feDDVRhWa/gVl6sTmdaWpko\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "858d23c7ba346622-AMS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": {\n        \"reference\": 10000001,\n        \"bvn\": \"22123456789\",\n        \"first_name\": \"ADO\",\n        \"middle_name\": \"JOHN\",\n        \"last_name\": \"SULE\",\n        \"dob\": \"1990-10-31\",\n        \"formatted_dob\": \"1990-10-31\",\n        \"mobile2\": null,\n        \"mobile\": \"08012345678\",\n        \"registration_date\": \"30-Mar-2015\",\n        \"enrollment_bank\": \"044\",\n        \"enrollment_branch\": \"RET SHOP - BABCOCK UNIVERSITY (137)\",\n        \"email\": \"wunmi@yahoo.com\",\n        \"gender\": \"Male\",\n        \"level_of_account\": null,\n        \"lga_of_origin\": \"Abeokuta South\",\n        \"lga_of_residence\": \"Abeokuta South\",\n        \"marital_status\": \"Single\",\n        \"nin\": null,\n        \"name_on_card\": \"ADO JOHN SULE\",\n        \"nationality\": null,\n        \"residential_address\": \"Ogun State\",\n        \"state_of_origin\": \"Ogun State\",\n        \"state_of_residence\": \"Ogun State\",\n        \"watchlisted\": 0,\n        \"base64Image\": null,\n        \"image_url\": \"https://picsum.photos/id/1/5000/3333\"\n    },\n    \"meta\": {\n        \"cost\": 20,\n        \"balance\": 4815\n    }\n}"
								}
							]
						}
					],
					"description": "Bank Verification Number (BVN) is the national ID system created by Nigerian banks to uniquely identified bank customers in the Nigerian banking ecosystem.\n\nThe banking ecosystem has also created a mechanism where all the bank accounts tied to a specific BVN could be gotten.",
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Get Accounts for a BVN",
					"item": [
						{
							"name": "Initialize BVN Accounts Consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contact\": \"08012345678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}verification/bvn/:bvn/accounts",
									"host": [
										"{{base_url}}verification"
									],
									"path": [
										"bvn",
										":bvn",
										"accounts"
									],
									"variable": [
										{
											"key": "bvn",
											"value": ""
										}
									]
								},
								"description": "This endpoint is used to initiate the process for getting customer consent. The integrator is required to pass the customer's BVN and the phone number.\n\n**If the phone number passed does not match the customer phone on record, an error is returned but with a masked collection of the correct phone and email on the customer account.**\n\n``` json\n{\n  \"status\": \"otp\",\n  \"message\": \"Please provide OTP sent to contact\",\n  \"data\": \"ado****@example.com\",\n  \"meta\": {\n    \"cost\": 0,\n    \"balance\": 4735\n  }\n}\n\n ```\n\n#### Request Body\n\n| Field | Type | Description |\n| --- | --- | --- |\n| contact | `String` | The phone number or email of the customer. At the minimum, the phone number must be the one registered to the BVN (e.g., 08012345678, [ado@example.com](https://mailto:ado@example.com)). |"
							},
							"response": [
								{
									"name": "Initialize BVN Accounts",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"contact\": \"ado****@example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://adjutor.lendsqr.com/v2/verification/bvn/:bvn/accounts",
											"protocol": "https",
											"host": [
												"adjutor",
												"lendsqr",
												"com"
											],
											"path": [
												"v2",
												"verification",
												"bvn",
												":bvn",
												"accounts"
											],
											"variable": [
												{
													"key": "bvn",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 21 Feb 2024 07:17:45 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "83e56b5f-fa1e-40d6-a987-79e05cee8fa8"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 21 Feb 2024 07:17:30 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"86-slc23G5+RJfJHR9MiSZECE5kUCk\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "858d35bfa8556622-AMS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"otp\",\n    \"message\": \"Please provide OTP sent to contact\",\n    \"data\": \"ado****@example.com\",\n    \"meta\": {\n        \"cost\": 0,\n        \"balance\": 4735\n    }\n}"
								}
							]
						},
						{
							"name": "Complete Consent and Get BVN Accounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"otp\": \"477226\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}verification/bvn/:bvn/accounts",
									"host": [
										"{{base_url}}verification"
									],
									"path": [
										"bvn",
										":bvn",
										"accounts"
									],
									"variable": [
										{
											"key": "bvn",
											"value": ""
										}
									]
								},
								"description": "This endpoint is used to get the bank accounts. It requires the OTP that has been sent to the customer. OTP to phones are usually sent from PFAlert sender id.\n\n#### Request Body\n\n| Field | Type | Description |\n| --- | --- | --- |\n| otp | `string` | The one-time password for verification (e.g., \"477226\"). |\n\n#### Response Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| account_name | `string` | The name of the account holder (e.g., \"ADO JOHN SULE\"). |\n| account_number | `string` | The unique number identifying the account (e.g., \"1234567890\"). |\n| bank_name | `string` | The name of the bank where the account is held (e.g., \"Access Bank Nigeria Plc\"). You can get the list of banks on the /banks endpoint. |\n| bank_code | `string` | The unique code identifying the bank (e.g., \"044\"). You can get the list of banks on the /banks endpoint. |\n| account_status | `string` | The status of the account (e.g., 1). Please see definition below. |\n| account_designation | `string` | The classification of the account holder (e.g., \"INDIVIDUAL\"). |\n| account_type | `string` | The type of account (e.g., \"SAVINGS\"). |\n\n#### Account Status\n\n| Status Code | Description |\n| --- | --- |\n| 1 | Active |\n| 2 | Dormant |\n| 3 | Closed |\n| 4 | PND (Post No Debit) |\n| 5 | PNC (Post No Credit) |\n| 6 | Inactive |\n| 7 | Total Freeze |\n| 8 | Other |"
							},
							"response": [
								{
									"name": "Complete BVN Accounts",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"otp\": \"998278\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://adjutor.lendsqr.com/v2/verification/bvn/:bvn/accounts",
											"protocol": "https",
											"host": [
												"adjutor",
												"lendsqr",
												"com"
											],
											"path": [
												"v2",
												"verification",
												"bvn",
												":bvn",
												"accounts"
											],
											"variable": [
												{
													"key": "bvn",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 21 Feb 2024 07:30:41 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "1f01b79c-6b20-4fb8-b25c-b20a4b6efd6d"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 21 Feb 2024 07:30:32 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"74c-DjqwVcI8TtyBwlth2OV3gLYKrlQ\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "858d48d90a446622-AMS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n\t\"status\": \"success\",\n\t\"message\": \"Successful\",\n\t\"data\": [\n\t\t{\n\t\t\t\"account_name\": \"ADO JOHN SULE\",\n\t\t\t\"account_number\": \"9876543210\",\n\t\t\t\"bank_name\": \"GTBank\",\n\t\t\t\"bank_code\": \"058\",\n\t\t\t\"account_status\": 4,\n\t\t\t\"account_designation\": \"INDIVIDUAL\",\n\t\t\t\"account_type\": \"CURRENT\"\n\t\t},\n\t\t{\n\t\t\t\"account_name\": \"ADO JOHN SULE\",\n\t\t\t\"account_number\": \"1234567890\",\n\t\t\t\"bank_name\": \"Access Bank Nigeria Plc\",\n\t\t\t\"bank_code\": \"044\",\n\t\t\t\"account_status\": 1,\n\t\t\t\"account_designation\": \"INDIVIDUAL\",\n\t\t\t\"account_type\": \"SAVINGS\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"cost\": 20,\n\t\t\"balance\": 4735\n\t}\n}\n"
								}
							]
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Match Customer BVN Image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify that the status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"verify that the response has a 'message'\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"message\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"image\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}verification/bvn/:bvn/selfies",
							"host": [
								"{{base_url}}verification"
							],
							"path": [
								"bvn",
								":bvn",
								"selfies"
							],
							"variable": [
								{
									"key": "bvn",
									"value": null
								}
							]
						},
						"description": "This endpoint allows for real-time verification of an individual's Bank Verification Number (BVN) through the comparison of their photograph and facial features with their BVN record, thereby providing an additional layer of security and accuracy in customer information validation.\n\n#### Payload\n\n`image`: `required` image URL\n\n#### Path Variables\n\n`bvn`: `required` BVN of the person with the image to be compared.\n\n#### Response fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| match | `boolean` | Indicates if a match was found (e.g., true) |\n| similarity | `float` | The percentage probability that the image compared are similar. The higher the number, the greater the chance of similarity (e.g., 99.95) |"
					},
					"response": [
						{
							"name": "Match customer BVN image",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"image\": \"https://documents.lendsqr.com/irorun/45eab612ad3efff8f3da1e65130be8538b8fd6c8602da4252ec35c61ec18802b1619ba7eda625b3efb671bfc478cad84e834c5ad858722e993889b3xxxxxx.png\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}verification/bvn/:bvn/selfies",
									"host": [
										"{{base_url}}verification"
									],
									"path": [
										"bvn",
										":bvn",
										"selfies"
									],
									"variable": [
										{
											"key": "bvn",
											"value": "22536011111"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 10 Aug 2023 14:10:33 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "5314f877-acaf-4164-acb7-f1f99b3f1b0d"
								},
								{
									"key": "Last-Modified",
									"value": "Thu, 10 Aug 2023 14:10:32 GMT"
								},
								{
									"key": "ETag",
									"value": "W/\"82-9k7Nyc6Q89LGBa12YAMXH2UqqJs\""
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "7f48d2a54d443d13-CDG"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": {\n        \"match\": true,\n        \"similarity\": 99.94831085205078\n    },\n    \"meta\": {\n        \"cost\": 30,\n        \"balance\": 1285\n    }\n}"
						}
					]
				},
				{
					"name": "Verify Customer Bank Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify that the status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"verify that the response has a 'message'\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"message\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"account_number\": \"3076329541\",\n    \"bank_code\": \"011\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}verification/bankaccount",
							"host": [
								"{{base_url}}verification"
							],
							"path": [
								"bankaccount"
							]
						},
						"description": "This endpoint is used for verification of a customer's bank account.\n\n#### Payload\n\n`account_number`: `required` account number to be verified\n\n`bank_code`: `required` the bank code for the account number\n\n#### Response Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| bank_code | `string` | Central Bank of Nigeria code identifying the bank (e.g., \"058\") |\n| bank_name | `string` | Name of the bank (e.g., \"Example Bank Plc\") |\n| account_name | `string` | Name associated with the account (e.g., \"DOE JOHN\") |\n| account_number | `string` | Account number (e.g., \"0425571111\") |\n| bvn | `string` | Bank Verification Number. The middle 7 numbers are masked with 0s (e.g., \"22000000021\") |"
					},
					"response": [
						{
							"name": "Verify Customer Bank Account",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"0425571111\",\n    \"bank_code\": \"058\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}verification/bankaccount/bvn",
									"host": [
										"{{base_url}}verification"
									],
									"path": [
										"bankaccount",
										"bvn"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 10 Aug 2023 14:43:21 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "45a5849d-e413-474f-966d-ac800803a5f8"
								},
								{
									"key": "Last-Modified",
									"value": "Thu, 10 Aug 2023 14:43:21 GMT"
								},
								{
									"key": "ETag",
									"value": "W/\"c9-19Gwq+rB7O302vWla1jPDh/+TTI\""
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "7f4902b9bb13046b-CDG"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": {\n        \"bank_code\": \"058\",\n        \"account_name\": \"DOE JOHN\",\n        \"account_number\": \"0425571111\",\n        \"bvn\": \"22000000021\"\n    },\n    \"meta\": {\n        \"cost\": 10,\n        \"balance\": 1245\n    }\n}"
						}
					]
				},
				{
					"name": "Check Karma for Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify that the status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"verify that the response has a 'message'\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"message\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}verification/karma/:identity",
							"host": [
								"{{base_url}}verification"
							],
							"path": [
								"karma",
								":identity"
							],
							"variable": [
								{
									"key": "identity",
									"value": ""
								}
							]
						},
						"description": "Karma is a database of blacklisted bad actors within the Lendsqr ecosystem. A bad actor is someone who has been involved with fraud or has tried to request loans with fake identity. A bad actor may also be a chronic defaulter whose loan has been written off.\n\nThis endpoint is used to check if a customer is on the blacklist of bad actors.\n\n#### Path Variables\n\n`identity`: `required` Identity of customer which could be one of the following:\n\n| Field | Description | Format Example |\n| --- | --- | --- |\n| Email Address | Format should be in the form of [email@example.com](https://mailto:email@example.com) | [email@example.com](https://mailto:email@example.com) |\n| Phone Number | Format should be in the form of +2347012345678 | +2347012345678 |\n| Domain Name | Format should be in the form of example.com | example.com |\n| BVN | Format should be in the form of 22212345678 | 22212345678 |\n| NUBAN Account number | Format should be in the form of XXX-1234567890 Where XXX is the CBN bank code | 070-1234567890 for a Fidelity Bank account. |\n| Images | Format is Base64 | Base64 encoded string |\n\n#### Response Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| karma_identity | `string` | Unique identifier for karma (e.g., \"0zspgifzbo.ga\") |\n| amount_in_contention | `string` | Amount involved in contention (e.g., \"0.00\") |\n| reason | `string` | Reason for the karma entry, if applicable (e.g., null) |\n| default_date | `date` | Date of default (e.g., \"2020-05-18\") |\n| karma_type | `object` | Type of karma (e.g., {\"karma\": \"Others\"}) |\n| karma_identity_type | `object` | Type of identity associated with karma (e.g., {\"identity_type\": \"Domain\"}) |\n| reporting_entity | `object` | Entity reporting the karma (e.g., {\"name\": \"Blinkcash\", \"email\": \"[support@blinkcash.ng](https://mailto:support@blinkcash.ng)\"}) |"
					},
					"response": [
						{
							"name": "Check Karma for Customer",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}verification/karma/:identity",
									"host": [
										"{{base_url}}verification"
									],
									"path": [
										"karma",
										":identity"
									],
									"variable": [
										{
											"key": "identity",
											"value": "0zspgifzbo.ga"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 08 Aug 2023 14:26:38 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "0150a3b9-1e2e-4bc1-825e-f4bb024f7463"
								},
								{
									"key": "Last-Modified",
									"value": "Tue, 08 Aug 2023 14:26:38 GMT"
								},
								{
									"key": "ETag",
									"value": "W/\"157-/X62qo9vh7N9XNeVvLk5BxWrnvs\""
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "7f386f7a0fc9d430-LOS"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": {\n        \"karma_identity\": \"0zspgifzbo.ga\",\n        \"amount_in_contention\": \"0.00\",\n        \"reason\": null,\n        \"default_date\": \"2020-05-18\",\n        \"karma_type\": {\n            \"karma\": \"Others\"\n        },\n        \"karma_identity_type\": {\n            \"identity_type\": \"Domain\"\n        },\n        \"reporting_entity\": {\n            \"name\": \"Blinkcash\",\n            \"email\": \"support@blinkcash.ng\"\n        }\n    },\n    \"meta\": {\n        \"cost\": 10,\n        \"balance\": 1600\n    }\n}"
						}
					]
				},
				{
					"name": "Check for Borrower on Ecosystem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify that the status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"verify that the response has a 'message'\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"message\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}verification/ecosystem/:bvn",
							"host": [
								"{{base_url}}verification"
							],
							"path": [
								"ecosystem",
								":bvn"
							],
							"variable": [
								{
									"key": "bvn",
									"value": null,
									"description": "Bank Verification Number"
								}
							]
						},
						"description": "The Lendsqr ecosystem provides an aggregated view of borrowers which lenders could have access to make decisions. To access this service, the lender must provide an evidence of customer explicit consent.\n\nFurthermore, where it is proven that a consent was never provided, the lender would be liable for all legal cost required to ameliorate issues that may arise. Lender may also be removed from the platform.\n\nThis endpoint is used to verify if a borrower exists on the Lendsqr ecosystem.\n\n#### Path Variables\n\n`bvn`: `required` BVN no. of the person to be checked.\n\n#### Response Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| bvn | `string` | Bank Verification Number (e.g., \"22536011111\") |\n| first_name | `string` | First name of the individual (e.g., \"JANE\") |\n| last_name | `string` | Last name of the individual (e.g., \"DOE\") |\n| bvn_phone_number | `string` | Phone number registered with BVN (e.g., \"07062561111\") |\n| date_of_birth | `date` | Date of birth in ISO format (e.g., \"1997-09-10\") |\n| age | `integer` | Age of the individual (e.g., 25) |\n| unique_phone_numbers | `integer` | Count of unique phone numbers (e.g., 0) |\n| phone_number | `string` | Primary phone number (e.g., \"07062561111\") |\n| unique_emails | `integer` | Count of unique email addresses (e.g., 0) |\n| email | `string` | Email address (e.g., \"[janedoe@gmail.com](https://mailto:janedoe@gmail.com)\") |\n| gender | `string` | Gender of the individual (e.g., \"Female\") |\n| lenders | `integer` | Number of lenders interacted with (e.g., 1) |\n| first_account | `date` | Date of first account creation in ISO format (e.g., \"2020-11-16\") |\n| last_account | `date` | Date of last account creation in ISO format (e.g., \"2023-06-26\") |\n| failed_selfie_bvn_check | `integer` | Number of failed BVN selfie checks (e.g., 0) |\n| lending_lenders | `integer` | Number of lending lenders (e.g., 0) |\n| loans | `integer` | Total number of loans (e.g., 0) |\n| loan_amount | `integer` | Total loan amount (e.g., 0) |\n| loan_amount_minimum | `integer` | Minimum loan amount (e.g., 0) |\n| loan_amount_maximum | `integer` | Maximum loan amount (e.g., 150000) |\n| loan_amount_average | `float` | Average loan amount (e.g., 5892.954545) |\n| settled_loans | `integer` | Number of settled loans (e.g., 0) |\n| settled_loan_amount | `integer` | Amount of settled loans (e.g., 0) |\n| settled_loan_amount_paid | `integer` | Amount paid for settled loans (e.g., 0) |\n| running_loans | `integer` | Number of running loans (e.g., 0) |\n| running_loan_amount | `integer` | Amount of running loans (e.g., 0) |\n| past_due_loans | `integer` | Number of past due loans (e.g., 0) |\n| past_due_loan_amount | `integer` | Amount of past due loans (e.g., 0) |\n| past_due_loan_amount_due | `integer` | Amount due for past due loans (e.g., 2000) |\n| penalty | `integer` | Penalty amount (e.g., 0) |\n| penalty_paid | `integer` | Penalty amount paid (e.g., 0) |\n| delayed_paid_loans | `integer` | Number of delayed paid loans (e.g., 0) |\n| delayed_paid_loan_amount | `integer` | Amount of delayed paid loans (e.g., 0) |\n| delayed_paid_loans_trials | `integer` | Trials for delayed paid loans (e.g., 0) |\n| delayed_paid_loans_avg | `integer` | Average trials for delayed paid loans (e.g., 0) |\n| delayed_paid_loans_trials_max | `integer` | Maximum trials for delayed paid loans (e.g., 0) |\n| delayed_paid_loans_trials_min | `integer` | Minimum trials for delayed paid loans (e.g., 0) |\n| first_loan_date | `date` | Date of first loan in ISO format (e.g., \"2020-12-24\") |\n| last_loan_date | `date` | Date of last loan in ISO format (e.g., \"2023-07-20\") |\n| loan_requests | `integer` | Number of loan requests (e.g., 0) |\n| failed_loan_requests | `integer` | Number of failed loan requests (e.g., 0) |\n| logins | `integer` | Number of logins (e.g., 115) |\n| first_login | `date` | Date of first login in ISO format (e.g., \"2023-06-01\") |\n| last_login | `date` | Date of last login in ISO format (e.g., \"2023-08-08\") |\n| unique_login_ips | `integer` | Count of unique login IPs (e.g., 0) |\n| unique_device_ids | `integer` | Count of unique device IDs (e.g., 0) |\n| distinct_mobile_os | `integer` | Count of distinct mobile OS used (e.g., 0) |\n| duplicated_devices | `integer` | Count of duplicated devices (e.g., 0) |\n| shared_device_users | `integer` | Count of shared device users (e.g., 0) |\n| credit_delinquency | `integer` | Credit delinquency flag (e.g., 0) |\n| processed_on | `date` | Date when the data was processed in ISO format (e.g., \"2023-08-08\") |"
					},
					"response": [
						{
							"name": "Check for Borrower on Ecosystem",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}verification/ecosystem/:bvn",
									"host": [
										"{{base_url}}verification"
									],
									"path": [
										"ecosystem",
										":bvn"
									],
									"variable": [
										{
											"key": "bvn",
											"value": "22153475955"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 08 Aug 2023 14:28:56 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "a7855073-2a36-4924-a21f-077ef89219c0"
								},
								{
									"key": "Last-Modified",
									"value": "Tue, 08 Aug 2023 14:28:55 GMT"
								},
								{
									"key": "ETag",
									"value": "W/\"591-Cd5yroepYTa3PyDTbhzMyhKotAE\""
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "7f3872d4eeb8d430-LOS"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": {\n        \"bvn\": \"22536011111\",\n        \"first_name\": \"JANE\",\n        \"last_name\": \"DOE\",\n        \"bvn_phone_number\": \"07062561111\",\n        \"date_of_birth\": \"1997-09-10T00:00:00.000Z\",\n        \"age\": 25,\n        \"unique_phone_numbers\": 0,\n        \"phone_number\": \"07062561111\",\n        \"unique_emails\": 0,\n        \"email\": \"janedoe@gmail.com\",\n        \"gender\": \"Female\",\n        \"lenders\": 1,\n        \"first_account\": \"2020-11-16T10:49:57.000Z\",\n        \"last_account\": \"2023-06-26T07:56:37.000Z\",\n        \"failed_selfie_bvn_check\": 0,\n        \"lending_lenders\": 0,\n        \"loans\": 0,\n        \"loan_amount\": 0,\n        \"loan_amount_minimum\": 0,\n        \"loan_amount_maximum\": 150000,\n        \"loan_amount_average\": 5892.954545,\n        \"settled_loans\": 0,\n        \"settled_loan_amount\": 0,\n        \"settled_loan_amount_paid\": 0,\n        \"running_loans\": 0,\n        \"running_loan_amount\": 0,\n        \"past_due_loans\": 0,\n        \"past_due_loan_amount\": 0,\n        \"past_due_loan_amount_due\": 2000,\n        \"penalty\": 0,\n        \"penalty_paid\": 0,\n        \"delayed_paid_loans\": 0,\n        \"delayed_paid_loan_amount\": 0,\n        \"delayed_paid_loans_trials\": 0,\n        \"delayed_paid_loans_avg\": 0,\n        \"delayed_paid_loans_trials_max\": 0,\n        \"delayed_paid_loans_trials_min\": 0,\n        \"first_loan_date\": \"2020-12-24T07:54:37.000Z\",\n        \"last_loan_date\": \"2023-07-20T11:38:02.000Z\",\n        \"loan_requests\": 0,\n        \"failed_loan_requests\": 0,\n        \"logins\": 115,\n        \"first_login\": \"2023-06-01T12:32:27.000Z\",\n        \"last_login\": \"2023-08-08T08:23:49.000Z\",\n        \"unique_login_ips\": 0,\n        \"unique_device_ids\": 0,\n        \"distinct_mobile_os\": 0,\n        \"duplicated_devices\": 0,\n        \"shared_device_users\": 0,\n        \"credit_delinquency\": 0,\n        \"processed_on\": \"2023-08-08T14:02:33.000Z\"\n    },\n    \"meta\": {\n        \"cost\": 25,\n        \"balance\": 1590\n    }\n}"
						}
					]
				}
			],
			"description": "The Validation APIs are resources and tools for validating customer information. These validation processes make use of APIs that allow you to confirm the accuracy of customer information using their Bank Verification Numbers (BVNs), email addresses, or phone numbers.\n\nThe APIs are designed to help you ensure that customer information is accurate and up-to-date, providing you with a reliable and efficient method for validating customer data.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Decisioning",
			"item": [
				{
					"name": "Get Decision Models",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify that the status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"verify that the response has a 'message'\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"message\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}decisioning/models",
							"host": [
								"{{base_url}}decisioning"
							],
							"path": [
								"models"
							]
						},
						"description": "This endpoint fetches all the decision models that have been configured for your profile. This would allow you to programmatically iterate and select."
					},
					"response": []
				},
				{
					"name": "Get Decision Model Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify that the status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"verify that the response has a 'message'\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"message\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}decisioning/models/:id/settings",
							"host": [
								"{{base_url}}decisioning"
							],
							"path": [
								"models",
								":id",
								"settings"
							],
							"variable": [
								{
									"key": "id",
									"value": null
								}
							]
						},
						"description": "This endpoint is used to obtain the details of a Decision Model.\n\n#### Path Variables\n\n`id`: `required` The id of the decison model.decision"
					},
					"response": []
				},
				{
					"name": "Oraculi Borrower Scoring",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify that the status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"verify that the response has a 'message'\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"message\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"gender\": \"Female\",\n    \"marital_status\": \"Single\",\n    \"age\": \"21 - 30\",\n    \"location\": \"lagos\",\n    \"no_of_dependent\": \"0\",\n    \"type_of_residence\": \"Rented Apartment\",\n    \"educational_attainment\": \"BSc, HND and Other Equivalent\",\n    \"employment_status\": \"Employed\",\n    \"sector_of_employment\": \"Other Financial\",\n    \"tier\": \"Tier 1\",\n    \"monthly_net_income\": \"100,000 - 199,999\",\n    \"employer_category\": \"Private Company\",\n    \"bvn\": \"22233312345\",\n    \"phone_number\": \"08012345678\",\n    \"total_years_of_experience\": 5,\n    \"time_with_current_employer\": 2,\n    \"previous_lendsqr_loans\": 3,\n    \"code\": \"9dppknauu\",\n    \"phone\": \"08012345678\",\n    \"bvn_phone\": \"08012345678\",\n    \"office_email\": \"adojohnsule@lendsqr.com\",\n    \"personal_email\": \"adojohnsule@lendsqr.com\",\n    \"amount\": 10000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}decisioning/models/:id",
							"host": [
								"{{base_url}}decisioning"
							],
							"path": [
								"models",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "2355"
								}
							]
						},
						"description": "This endpoint is used for scoring based on the passed parameters.\n\nThe Lendsqr data provides the source of data that have been used to develop and optimize our proprietary scoring algorithms. The scoring system is continually updated to reflect new insights into the shifting borrower’s behaviors both for cohorts of customers and for the Nigerian financial system. The ID variable refers to the ID of the decision model.\n\n#### Request Payload\n\n| Property | Type | Examples |\n| --- | --- | --- |\n| `gender` | `string` | male, female |\n| `marital_status` | `string` | married, single, divorced, separated, widowed |\n| `age` | integer | 25, 37 |\n| `location` | `string` | Lagos, Ibadan |\n| `no_of_dependent` | integer | 0, 5 |\n| `type_of_residence` | `string` | own house, rented apartment, parents apartment |\n| `education_attainment` | `string` | MSc and above, BSc, HND and Other Equivalent, Diploma/School Cert, Others |\n| `employment_status` | `string` | employed, self employed, unemployed, retired |\n| `sector_of_employment` | `string` | agriculture, banking, education, law |\n| `tier` | `string` | tier 1. tier 2 |\n| `monthly_net_income` | `string` | 700,000 -999,999, above 1,000,000, |\n| `employment_category` | `string` | artisan, enterprise, private company, federal: public |\n| `bvn` | `string` | 22222222222 |\n| `phone_number` | `string` | 0805555555 |\n| `working_period` | integer | 1 |\n| `time_with_current_employer` | integer | 1 |\n| `previous_lendsqr_loans` | integer | 1 |\n| `code` | `string` | 56etruu |\n| `phone` | `string` | 08106666666 |\n| `bvn_phone` | `string` | 08106666666 |\n| `official_email` | `string` | [male@female.com](https://) |\n| `personal_email` | `string` | [male@female.com](https://) |\n| `amount` | `string` | 5000 |"
					},
					"response": [
						{
							"name": "Oraculli Borrower Scoring",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"gender\": \"Female\",\n    \"marital_status\": \"Single\",\n    \"age\": \"21\",\n    \"location\": \"lagos\",\n    \"no_of_dependent\": \"0\",\n    \"type_of_residence\": \"Rented Apartment\",\n    \"educational_attainment\": \"BSc, HND and Other Equivalent\",\n    \"employment_status\": \"Employed\",\n    \"sector_of_employment\": \"Other Financial\",\n    \"monthly_net_income\": \"100,000 - 199,999\",\n    \"employer_category\": \"Private Company\",\n    \"bvn\": \"22536051111\",\n    \"phone_number\": \"08012345678\",\n    \"total_years_of_experience\": 5,\n    \"time_with_current_employer\": 2,\n    \"previous_lendsqr_loans\": 3,\n    \"phone\": \"07062561111\",\n    \"bvn_phone\": \"07062561111\",\n    \"office_email\": \"adojohnsule@lendsqr.com\",\n    \"personal_email\": \"adojohnsule@lendsqr.com\",\n    \"amount\": 10000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}decisioning/models/:id",
									"host": [
										"{{base_url}}decisioning"
									],
									"path": [
										"models",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2355"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 08 Aug 2023 14:42:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "4e829b52-a39b-4fad-8da8-93d9ea8171ab"
								},
								{
									"key": "Last-Modified",
									"value": "Tue, 08 Aug 2023 14:42:45 GMT"
								},
								{
									"key": "ETag",
									"value": "W/\"7f6-IOxnW/y6JbsKwgsmXd4jlYoR2sc\""
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "7f3887169982c4fc-LOS"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": {\n        \"credit_score_items\": [\n            {\n                \"score_name\": \"age\",\n                \"score_value\": \"21\",\n                \"weight\": \"7\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 6,\n                \"weighted_score\": 0.0382\n            },\n            {\n                \"score_name\": \"gender\",\n                \"score_value\": \"Female\",\n                \"weight\": \"10\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 10,\n                \"weighted_score\": 0.0909\n            },\n            {\n                \"score_name\": \"location\",\n                \"score_value\": \"lagos\",\n                \"weight\": \"5\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 9,\n                \"weighted_score\": 0.0409\n            },\n            {\n                \"score_name\": \"customer_tier\",\n                \"score_value\": null,\n                \"weight\": \"5\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 0,\n                \"weighted_score\": 0\n            },\n            {\n                \"score_name\": \"marital_status\",\n                \"score_value\": \"Single\",\n                \"weight\": \"5\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 6,\n                \"weighted_score\": 0.0273\n            },\n            {\n                \"score_name\": \"employer_category\",\n                \"score_value\": \"Private Company\",\n                \"weight\": \"5\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 8,\n                \"weighted_score\": 0.0364\n            },\n            {\n                \"score_name\": \"employment_status\",\n                \"score_value\": \"Employed\",\n                \"weight\": \"10\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 10,\n                \"weighted_score\": 0.0909\n            },\n            {\n                \"score_name\": \"type_of_residence\",\n                \"score_value\": \"Rented Apartment\",\n                \"weight\": \"5\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 10,\n                \"weighted_score\": 0.0455\n            },\n            {\n                \"score_name\": \"monthly_net_income\",\n                \"score_value\": \"100,000 - 199,999\",\n                \"weight\": \"10\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 5,\n                \"weighted_score\": 0.0455\n            },\n            {\n                \"score_name\": \"no_of_dependent\",\n                \"score_value\": \"0\",\n                \"weight\": \"8\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 5,\n                \"weighted_score\": 0.0364\n            },\n            {\n                \"score_name\": \"sector_of_employment\",\n                \"score_value\": \"Other Financial\",\n                \"weight\": \"5\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 6,\n                \"weighted_score\": 0.0273\n            },\n            {\n                \"score_name\": \"educational_attainment\",\n                \"score_value\": \"BSc, HND and Other Equivalent\",\n                \"weight\": \"5\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 8,\n                \"weighted_score\": 0.0364\n            },\n            {\n                \"score_name\": \"time_with_current_employer\",\n                \"score_value\": 2,\n                \"weight\": \"5\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 6,\n                \"weighted_score\": 0.0273\n            },\n            {\n                \"score_name\": \"ecosystem.settled_loans\",\n                \"score_value\": null,\n                \"weight\": \"25\",\n                \"maximum_score\": 10,\n                \"borrower_score\": 3,\n                \"weighted_score\": 0.0682\n            }\n        ],\n        \"total_weight\": 110,\n        \"score\": 61.12,\n        \"offers\": []\n    },\n    \"meta\": {\n        \"cost\": 15,\n        \"balance\": 1460\n    }\n}"
						}
					]
				}
			],
			"description": "These APIs provide quick, easy, and cost-effective solutions for making informed decisions during your loan decision processes, allowing you to make confident and efficient choices with ease.\n\nTo use the Decisioning APIs, you must have designed your decision models and configure them within the Lendsqr admin console.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Oraculi Mobile SDK (Beta)",
			"item": [
				{
					"name": "Get User Accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}oraculi/sms/entities/:bvn/accounts",
							"host": [
								"{{base_url}}oraculi"
							],
							"path": [
								"sms",
								"entities",
								":bvn",
								"accounts"
							],
							"variable": [
								{
									"key": "bvn",
									"value": null
								}
							]
						},
						"description": "This endpoint is used to get the accounts associated to a user from their bank SMS.\n\nThis API works for customers who have installed the app that has the SDK on their phones and have also granted access to the SDK to fetch their SMS data.\n\n#### Path Variables\n\n`bvn`: `required` The BVN of the user."
					},
					"response": []
				},
				{
					"name": "Get User Account Transactions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}oraculi/sms/:phone_number/transactions",
							"host": [
								"{{base_url}}oraculi"
							],
							"path": [
								"sms",
								":phone_number",
								"transactions"
							],
							"variable": [
								{
									"key": "phone_number",
									"value": null
								}
							]
						},
						"description": "This endpoint is used to get the transactions associated to a particular bank account from the user's bank SMS.\n\n#### Path Variables\n\n`phone_number`: `required` The phone number registered on the user's bank account."
					},
					"response": []
				}
			],
			"description": "Oraculi is the Lendsqr underwriting scoring engine. Oraculi means The Oracle in Latin.\n\nLendsqr Oraculi provides a RESTful API for accessing user data gathered from your customer’s phones with the SDK you have embedded.\n\nThe SDK is only available for Android phones.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Data for Lenders",
			"item": [
				{
					"name": "Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify that the status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"verify that the response has a 'success'\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"success\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}data/options",
							"host": [
								"{{base_url}}data"
							],
							"path": [
								"options"
							]
						},
						"description": "This endpoint is used to get the data options or sources available for a lender.\n\n#### Response Payload\n\n| Field | Type | Description |\n| --- | --- | --- |\n| name | `string` | \"Users\" |\n| description | `string` | \"Get details of all users that have signed up to the system. This may include users who have not completed their onboarding\" |\n| path | `string` | \"/users\" |"
					},
					"response": [
						{
							"name": "Data Options",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}data/options",
									"host": [
										"{{base_url}}data"
									],
									"path": [
										"options"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 22:55:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "286bceb2-43a0-4cc6-a001-131f13a66e3c"
								},
								{
									"key": "Last-Modified",
									"value": "Wed, 28 Feb 2024 22:54:57 GMT"
								},
								{
									"key": "ETag",
									"value": "W/\"690-sCrGprb2Do2p61q0+9QpVPX9kU8\""
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "85cc40948afa636a-LHR"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"name\": \"Users\",\n            \"description\": \"Get details of all users that have signed up to the system. This may include users who have not completed their onboarding\",\n            \"path\": \"/users\"\n        },\n        {\n            \"name\": \"Loans\",\n            \"description\": \"Get details of all loans for any users. You can filter with user_id, status, and approved_on columns\",\n            \"path\": \"/loans\"\n        },\n        {\n            \"name\": \"Options\",\n            \"description\": \"List all available data options. To get the data for any path, please call with base_url/<path>\",\n            \"path\": \"/options\"\n        },\n        {\n            \"name\": \"Lenders\",\n            \"description\": \"Get the list of all the lenders within the system. Should not appear for anyone\",\n            \"path\": \"/lenders\"\n        },\n        {\n            \"name\": \"Loan analytics\",\n            \"description\": \"Analytics of loans for organization grouped by month. You can filter with the month column\",\n            \"path\": \"/analytics/loans\"\n        },\n        {\n            \"name\": \"Loans\",\n            \"description\": \"Get transactions for loans. You can filter data using the loan_id and created_on columns\",\n            \"path\": \"/loans/transactions\"\n        },\n        {\n            \"name\": \"Loans\",\n            \"description\": \"Get schedules for specific loans. You can filter data using the loan_id and created_on columns\",\n            \"path\": \"/loans/schedules\"\n        },\n        {\n            \"name\": \"Transactions\",\n            \"description\": \"Get details of all user transactions. You can filter data using the user_id column\",\n            \"path\": \"/transactions\"\n        },\n        {\n            \"name\": \"Top offers\",\n            \"description\": \"Get the list of top loan offers in the Lendsqr ecosystem.\",\n            \"path\": \"/lenders/top-offers\"\n        },\n        {\n            \"name\": \"Lenders loans\",\n            \"description\": \"Get the list of all the loans that all lenders in the Lendsqr ecosystem have\",\n            \"path\": \"/lenders/loans\"\n        },\n        {\n            \"name\": \"Cards\",\n            \"description\": \"Get details of all cards.\",\n            \"path\": \"/cards\"\n        },\n        {\n            \"name\": \"Bank Accounts\",\n            \"description\": \"Get details of all bank accounts.\",\n            \"path\": \"/bank-accounts\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify that the status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"verify that the response has a 'data'\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"data\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}data/users",
							"host": [
								"{{base_url}}data"
							],
							"path": [
								"users"
							]
						},
						"description": "| Field | Type | Description |\n| --- | --- | --- |\n| org_id | `integer` | 9999 |\n| organization | `string` | \"Example Lender\" |\n| id | `integer` | 44691 |\n| first_name | `string` | \"Ado\\`\" |\n| last_name | `string` | \"John Sule\" |\n| full_name | `string` | \"Ado John Sule\" |\n| phone_number | `string` | \"07062569817\" |\n| phone_number_hash | `string` | \"318c88a8e1fcfc049114e69128275b4d\" |\n| email | `string` | \"Ado@lendsqr.com\" |\n| bvn | `string` | \"21234567890\" |\n| bvn_phone_number | `string` | \"08012345678\" |\n| `date`_of_birth | `date` | \"1990-09-10\" |\n| age | `integer` | 26 |\n| gender | `string` | \"Female\" |\n| stage_id | `integer` | 6 |\n| stage | `string` | \"done\" |\n| photo_url | `string` | \"[https://image.url.com\"](https://image.url.com) |\n| mifos_client_id | `string` | \"41053\" |\n| client_id | `string` | \"41053\" |\n| savings_id | `string` | \"47197\" |\n| account_number | `string` | \"IDR000047197----------\" |\n| account_balance | `float` | 1144.25 |\n| account_name | `string` | \"Ado John Sule\" |\n| referral_code | `string` | \"B7YEHI\" |\n| device_id | `string` | \"bd96e5e050c0529d\" |\n| notification_token | `string` | \"****\" |\n| device_type | `string` | \"Android\" |\n| tier_id | `integer` | 24 |\n| tier | `string` | \"Tier 3\" |\n| withdrawal_limit | `integer` | 1000000 |\n| deposit_limit | `integer` | 20000 |\n| borrower_max_cumulative_amount | `float` | 999999999999 |\n| support_email | `string` | \"support@example.com\" |\n| loan_count | `integer` | 14 |\n| savings_plans | `integer` | 0 |\n| savings_target | `integer` | 0 |\n| savings_balance | `integer` | 0 |\n| activated | `integer` | 1 |\n| activated_on | `datetime` |  |\n| blacklisted | `integer` | 0 |\n| reason | `string` | null |\n| selfie_bvn_check | `string` | \"Successful\" |\n| selfie_id_check | `string` | \"Successful\" |\n| nok_first_name | `string` | \"Evelyn\" |\n| nok_last_name | `string` | \"Peters\" |\n| nok_phone_number | `string` | \"09099494342\" |\n| nok_email | `string` | \"evelyn@lendsqr.com\" |\n| nok_address | `string` | \"Ayodele Oke-Owo Street Gbagada\" |\n| nok_relationship | `string` | \"Others\" |\n| marital_status | `string` | \"Single\" |\n| no_of_dependent | `string` | \"0\" |\n| type_of_residence | `string` | \"Parents Apartment\" |\n| educational_attainment | `string` | \"BSc, HND and Other Equivalent\" |\n| employment_status | `string` | \"Employed\" |\n| sector_of_employment | `string` | \"Other Financial\" |\n| current_employer | `string` | \"Lendsqr\" |\n| employment_category | `string` | \"Private Company\" |\n| monthly_net_income | `string` | \"200,000 - 399,999\" |\n| work_start_date | `datetime` |  |\n| work_email | `string` | \"ado@example.com\" |\n| country | `string` | \"NGA\" |\n| city | `string` | \"Gbagada\" |\n| lga | `string` | \"Kosofe\" |\n| street | null | null |\n| nearest_landmark | `string` | \"Deeper Life Church\" |\n| longitude | `float` | \\-102.0837554932 |\n| latitude | `float` | 47.421546936 |\n| address | `string` | \"Lagos\" |"
					},
					"response": [
						{
							"name": "Users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}data/users",
									"host": [
										"{{base_url}}data"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 28 Feb 2024 23:05:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "X-Request-ID",
									"value": "2b47c2f1-dea7-4c19-8250-e05e43f48ed0"
								},
								{
									"key": "Last-Modified",
									"value": "Wed, 28 Feb 2024 23:05:29 GMT"
								},
								{
									"key": "ETag",
									"value": "W/\"39515-/Q53k0DdvDTRus/qCQzKY2+97vM\""
								},
								{
									"key": "CF-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "CF-RAY",
									"value": "85cc5004cf47636a-LHR"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"org_id\": 9999,\n            \"organization\": \"Example Lender\",\n            \"id\": 44691,\n            \"first_name\": \"Ado`\",\n            \"last_name\": \"John Sule\",\n            \"full_name\": \"Ado John Sule\",\n            \"phone_number\": \"07062569817\",\n            \"phone_number_hash\": \"318c88a8e1fcfc049114e69128275b4d\",\n            \"email\": \"Ado@lendsqr.com\",\n            \"bvn\": \"21234567890\",\n            \"bvn_phone_number\": \"08012345678\",\n            \"date_of_birth\": \"1990-09-10\",\n            \"age\": 26,\n            \"gender\": \"Female\",\n            \"stage_id\": 6,\n            \"stage\": \"done\",\n            \"photo_url\": \"https://image.url.com\",\n            \"mifos_client_id\": \"41053\",\n            \"client_id\": \"41053\",\n            \"savings_id\": \"47197\",\n            \"account_number\": \"IDR000047197----------\",\n            \"account_balance\": 1144.25,\n            \"account_name\": \"Ado John Sule\",\n            \"referral_code\": \"B7YEHI\",\n            \"referred_by\": null,\n            \"referrer_name\": null,\n            \"referrer_email\": null,\n            \"referrer_phone\": null,\n            \"referrer_code\": null,\n            \"device_id\": \"bd96e5e050c0529d\",\n            \"notification_token\": \"********************************\",\n            \"device_type\": \"Android\",\n            \"tier_id\": 24,\n            \"tier\": \"Tier 3\",\n            \"withdrawal_limit\": 1000000,\n            \"deposit_limit\": 20000,\n            \"borrower_max_cumulative_amount\": 999999999999,\n            \"support_email\": \"support@example.com\",\n            \"loan_count\": 14,\n            \"savings_plans\": 0,\n            \"savings_target\": 0,\n            \"savings_balance\": 0,\n            \"activated\": 1,\n            \"activated_on\": \"2021-02-01T10:15:08.000Z\",\n            \"blacklisted\": 0,\n            \"reason\": null,\n            \"selfie_bvn_check\": \"Successful\",\n            \"selfie_id_check\": \"Successful\",\n            \"last_login_date\": \"2023-10-02T23:20:36.000Z\",\n            \"created_on\": \"2021-02-01T11:02:00.000Z\",\n            \"modified_on\": \"2023-10-02T23:20:36.000Z\",\n            \"deleted_on\": null,\n            \"nok_first_name\": \"Evelyn\",\n            \"nok_last_name\": \"Peters\",\n            \"nok_phone_number\": \"09099494342\",\n            \"nok_email\": \"evelyn@lendsqr.com\",\n            \"nok_address\": \"Ayodele Oke-Owo Street  Gbagada\",\n            \"nok_relationship\": \"Others\",\n            \"marital_status\": \"Single\",\n            \"no_of_dependent\": \"0\",\n            \"type_of_residence\": \"Parents Apartment\",\n            \"educational_attainment\": \"BSc, HND and Other Equivalent\",\n            \"employment_status\": \"Employed\",\n            \"sector_of_employment\": \"Other Financial\",\n            \"current_employer\": \"Lendsqr\",\n            \"employment_category\": \"Private Company\",\n            \"monthly_net_income\": \"200,000 - 399,999\",\n            \"work_start_date\": \"2020-11-15T23:00:00.000Z\",\n            \"work_email\": \"ado@example.com\",\n            \"country\": \"NGA\",\n            \"city\": \"Gbagada\",\n            \"lga\": \"Kosofe\",\n            \"street\": null,\n            \"nearest_landmark\": \"Deeper Life Church\",\n            \"longitude\": -102.0837554932,\n            \"latitude\": 47.421546936,\n            \"address\": \"Lagos\",\n            \"process_time\": \"2024-02-28T03:20:26.000Z\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"description": "### Introduction\n\nLenders and their customers generate a lot of data that are important for lenders outside of the Lendsqr ecosystem. Lendsqr allows lenders to use Adjutor APIs to get these data. There are almost infinite limits to the data a lender can get for their customers, transactions, audit activities, etc.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Operational Services",
			"item": [
				{
					"name": "Profile",
					"item": [
						{
							"name": "Get Adjutor Services Pricing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}profile/pricing",
									"host": [
										"{{base_url}}profile"
									],
									"path": [
										"pricing"
									]
								},
								"description": "This endpoint is used to obtain the current pricing of the API services. Kindly note that pricing may be different from lender to lender due to commercial negotiations that could have provide some lenders with a different pricing due to volume commitment.\n\nIf you want a cheaper price, which usually comes with a minimum monthly spend, please contact your account manager at growth@lendsqr.com."
							},
							"response": [
								{
									"name": "Get Adjutor Services Pricing",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}profile/pricing",
											"host": [
												"{{base_url}}profile"
											],
											"path": [
												"pricing"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Aug 2023 13:29:17 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "ffce023d-0a92-4484-ac47-7923b86002b5"
										},
										{
											"key": "Last-Modified",
											"value": "Mon, 14 Aug 2023 13:29:16 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"2bc-wuQroduQ50LikXzniRq/QTN48cQ\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7f698bb35ab303d6-LIS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": [\n        {\n            \"name\": \"Adjutor Oraculi Scoring\",\n            \"amount\": 15\n        },\n        {\n            \"name\": \"Adjutor Name Inquiry\",\n            \"amount\": 0\n        },\n        {\n            \"name\": \"Adjutor Name Inquiry with BVN\",\n            \"amount\": 10\n        },\n        {\n            \"name\": \"Adjutor Karma Lookup\",\n            \"amount\": 10\n        },\n        {\n            \"name\": \"Adjutor BVN Verification\",\n            \"amount\": 20\n        },\n        {\n            \"name\": \"Adjutor Image Compare\",\n            \"amount\": 30\n        },\n        {\n            \"name\": \"Adjutor Ecosystem Lookup\",\n            \"amount\": 25\n        },\n        {\n            \"name\": \"Adjutor Bank List\",\n            \"amount\": 0\n        },\n        {\n            \"name\": \"Adjutor CRC\",\n            \"amount\": 100\n        },\n        {\n            \"name\": \"Adjutor Oraculi Central\",\n            \"amount\": 100\n        },\n        {\n            \"name\": \"Adjutor Credit Registry\",\n            \"amount\": 1500\n        },\n        {\n            \"name\": \"Adjutor Oraculi Accounts\",\n            \"amount\": 10\n        },\n        {\n            \"name\": \"Adjutor Oraculi Statements\",\n            \"amount\": 25\n        },\n        {\n            \"name\": \"Adjutor Oraculi Analytics\",\n            \"amount\": 25\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Wallet",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}profile/wallet",
									"host": [
										"{{base_url}}profile"
									],
									"path": [
										"wallet"
									]
								},
								"description": "This request is used to obtain the wallet information on the lender's profile."
							},
							"response": []
						},
						{
							"name": "Get API Audit Logs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}admin/audit?page=1&limit=20",
									"host": [
										"{{base_url}}admin"
									],
									"path": [
										"audit"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										}
									]
								},
								"description": "This endpoint is used to get the audit logs of the API calls made on the profile.\n\n`This endpoint is currently under development`"
							},
							"response": []
						}
					]
				},
				{
					"name": "Miscellaneous",
					"item": [
						{
							"name": "Get List of Banks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}banks",
									"host": [
										"{{base_url}}banks"
									]
								},
								"description": "This endpoint is used for getting banks and their codes.\n\n#### Response Code\n\n| Field | Type | Description |\n| --- | --- | --- |\n| name | `string` | The name of the bank (e.g., \"Access Bank\"). |\n| shortcode | `string` | A unique code for the bank issued by the Central Bank of Nigeria (e.g., \"044\"). |\n| longcode | `string` | A unique code for the bank on the NIBSS network (e.g., \"000014\"). |"
							},
							"response": [
								{
									"name": "Get List of Banks",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}banks",
											"host": [
												"{{base_url}}banks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Aug 2023 13:17:55 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "1c82274f-e038-4de1-998d-8d16b721d3c5"
										},
										{
											"key": "Last-Modified",
											"value": "Mon, 14 Aug 2023 13:17:53 GMT"
										},
										{
											"key": "ETag",
											"value": "W/\"dcc-ImNirDzX8D8qoFcwASXEATbzskg\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7f697b067a3ed42c-LOS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successful\",\n    \"data\": [\n        {\n            \"name\": \"3line\",\n            \"shortcode\": null,\n            \"longcode\": \"110005\"\n        },\n        {\n            \"name\": \"Access Bank\",\n            \"shortcode\": \"044\",\n            \"longcode\": \"000014\"\n        },\n        {\n            \"name\": \"Alat by Wema\",\n            \"shortcode\": \"035\",\n            \"longcode\": \"000017\"\n        },\n        {\n            \"name\": \"ASO Savings and Loans\",\n            \"shortcode\": \"401\",\n            \"longcode\": \"090001\"\n        },\n        {\n            \"name\": \"Bankly MBF\",\n            \"shortcode\": \"\",\n            \"longcode\": \"090529\"\n        },\n        {\n            \"name\": \"Carbon\",\n            \"shortcode\": \"565\",\n            \"longcode\": \"100026\"\n        },\n        {\n            \"name\": \"CEMCS Microfinance Bank\",\n            \"shortcode\": \"50823\",\n            \"longcode\": \"090154\"\n        },\n        {\n            \"name\": \"Citibank Nigeria\",\n            \"shortcode\": \"023\",\n            \"longcode\": \"000009\"\n        },\n        {\n            \"name\": \"Conpro MFB (Kredi Bank)\",\n            \"shortcode\": \"50200\",\n            \"longcode\": \"090380\"\n        },\n        {\n            \"name\": \"Coronation Merchant Bank\",\n            \"shortcode\": \"559\",\n            \"longcode\": \"060001\"\n        },\n        {\n            \"name\": \"Dot pay\",\n            \"shortcode\": null,\n            \"longcode\": \"090470\"\n        },\n        {\n            \"name\": \"Ecobank Nigeria\",\n            \"shortcode\": \"050\",\n            \"longcode\": \"000010\"\n        },\n        {\n            \"name\": \"Ekondo Microfinance Bank\",\n            \"shortcode\": \"562\",\n            \"longcode\": \"090097\"\n        },\n        {\n            \"name\": \"Fairmoney MFB\",\n            \"shortcode\": \"\",\n            \"longcode\": \"090551\"\n        },\n        {\n            \"name\": \"FBNQuest Merchant Bank\",\n            \"shortcode\": \"911\",\n            \"longcode\": \"060002\"\n        },\n        {\n            \"name\": \"Fidelity Bank\",\n            \"shortcode\": \"070\",\n            \"longcode\": \"000007\"\n        },\n        {\n            \"name\": \"Firmus MFB\",\n            \"shortcode\": \"51314\",\n            \"longcode\": \"090366\"\n        },\n        {\n            \"name\": \"First Bank of Nigeria\",\n            \"shortcode\": \"011\",\n            \"longcode\": \"000016\"\n        },\n        {\n            \"name\": \"First City Monument Bank\",\n            \"shortcode\": \"214\",\n            \"longcode\": \"000003\"\n        },\n        {\n            \"name\": \"FSDH Merchant Bank\",\n            \"shortcode\": \"501\",\n            \"longcode\": \"400001\"\n        },\n        {\n            \"name\": \"Globus Bank\",\n            \"shortcode\": \"103\",\n            \"longcode\": \"000027\"\n        },\n        {\n            \"name\": \"Guaranty Trust Bank\",\n            \"shortcode\": \"058\",\n            \"longcode\": \"000013\"\n        },\n        {\n            \"name\": \"Hasal Microfinance Bank\",\n            \"shortcode\": \"50383\",\n            \"longcode\": \"090121\"\n        },\n        {\n            \"name\": \"Heritage Bank\",\n            \"shortcode\": \"030\",\n            \"longcode\": \"000020\"\n        },\n        {\n            \"name\": \"Jaiz Bank\",\n            \"shortcode\": \"301\",\n            \"longcode\": \"000006\"\n        },\n        {\n            \"name\": \"Keystone Bank\",\n            \"shortcode\": \"082\",\n            \"longcode\": \"000002\"\n        },\n        {\n            \"name\": \"Kuda Bank\",\n            \"shortcode\": \"50211\",\n            \"longcode\": \"090267\"\n        },\n        {\n            \"name\": \"MoniePoint Bank\",\n            \"shortcode\": \"50515\",\n            \"longcode\": \"090405\"\n        },\n        {\n            \"name\": \"Nova Merchant Bank\",\n            \"shortcode\": \"561\",\n            \"longcode\": \"060003\"\n        },\n        {\n            \"name\": \"Nuntius Internal Bank\",\n            \"shortcode\": \"999999\",\n            \"longcode\": \"999999\"\n        },\n        {\n            \"name\": \"One Finance\",\n            \"shortcode\": \"565\",\n            \"longcode\": \"100026\"\n        },\n        {\n            \"name\": \"Palmpay\",\n            \"shortcode\": \"100033\",\n            \"longcode\": \"100033\"\n        },\n        {\n            \"name\": \"Parallex Bank\",\n            \"shortcode\": \"526\",\n            \"longcode\": \"090004\"\n        },\n        {\n            \"name\": \"paycom (Opay)\",\n            \"shortcode\": \"305\",\n            \"longcode\": \"100004\"\n        },\n        {\n            \"name\": \"Polaris Bank\",\n            \"shortcode\": \"076\",\n            \"longcode\": \"000008\"\n        },\n        {\n            \"name\": \"Providus Bank\",\n            \"shortcode\": \"101\",\n            \"longcode\": \"000023\"\n        },\n        {\n            \"name\": \"Rand Merchant Bank Nigeria\",\n            \"shortcode\": \"502\",\n            \"longcode\": \"000024\"\n        },\n        {\n            \"name\": \"Rubies MFB\",\n            \"shortcode\": \"125\",\n            \"longcode\": \"090175\"\n        },\n        {\n            \"name\": \"Sparkle Microfinance Bank\",\n            \"shortcode\": \"51310\",\n            \"longcode\": \"090325\"\n        },\n        {\n            \"name\": \"Stanbic IBTC Bank\",\n            \"shortcode\": \"221\",\n            \"longcode\": \"000012\"\n        },\n        {\n            \"name\": \"Standard Chartered Bank\",\n            \"shortcode\": \"068\",\n            \"longcode\": \"000021\"\n        },\n        {\n            \"name\": \"Sterling Bank\",\n            \"shortcode\": \"232\",\n            \"longcode\": \"000001\"\n        },\n        {\n            \"name\": \"Suntrust Bank\",\n            \"shortcode\": \"100\",\n            \"longcode\": \"000022\"\n        },\n        {\n            \"name\": \"Support MFB\",\n            \"shortcode\": \"295\",\n            \"longcode\": \"090446\"\n        },\n        {\n            \"name\": \"TAJ Bank\",\n            \"shortcode\": \"302\",\n            \"longcode\": \"000026\"\n        },\n        {\n            \"name\": \"TCF MFB\",\n            \"shortcode\": \"51211\",\n            \"longcode\": \"090115\"\n        },\n        {\n            \"name\": \"Titan Trust Bank\",\n            \"shortcode\": \"102\",\n            \"longcode\": \"000025\"\n        },\n        {\n            \"name\": \"Union Bank of Nigeria\",\n            \"shortcode\": \"032\",\n            \"longcode\": \"000018\"\n        },\n        {\n            \"name\": \"United Bank For Africa\",\n            \"shortcode\": \"033\",\n            \"longcode\": \"000004\"\n        },\n        {\n            \"name\": \"Unity Bank\",\n            \"shortcode\": \"215\",\n            \"longcode\": \"000011\"\n        },\n        {\n            \"name\": \"VFD\",\n            \"shortcode\": \"566\",\n            \"longcode\": \"090110\"\n        },\n        {\n            \"name\": \"Wema Bank\",\n            \"shortcode\": \"035\",\n            \"longcode\": \"000017\"\n        },\n        {\n            \"name\": \"Zenith Bank\",\n            \"shortcode\": \"057\",\n            \"longcode\": \"000015\"\n        }\n    ],\n    \"meta\": {\n        \"cost\": 0,\n        \"balance\": 1225\n    }\n}"
								}
							]
						},
						{
							"name": "Get Status Check",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData.data).to.not.have.property(\"service\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}status",
									"host": [
										"{{base_url}}status"
									]
								},
								"description": "This endpoint is used to obtain the status of systems under Adjutor."
							},
							"response": [
								{
									"name": "Get Status Check",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}status",
											"host": [
												"{{base_url}}status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 14 Aug 2023 13:18:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "2c08234b-24ec-4518-9893-6334a9701fe8"
										},
										{
											"key": "ETag",
											"value": "W/\"323-kZyzG8ZmWrOKUR10s/0qZ95jhMM\""
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "CF-RAY",
											"value": "7f697b679c7fd42c-LOS"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"data\": [\n        {\n            \"service\": \"adjutor-oraculi-scoring\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-name-inquiry\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-name-inquiry-bvn\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-karma-lookup\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-bvn-verification\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-image-compare\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-ecosystem-lookup\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-bank-list\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-crc\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-firstcentral\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-credit-registry\",\n            \"success\": false\n        },\n        {\n            \"service\": \"adjutor-oraculi-accounts\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-oraculi-statement\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-oraculi-analytics\",\n            \"success\": true\n        },\n        {\n            \"service\": \"adjutor-oraculi-models\",\n            \"success\": true\n        }\n    ]\n}"
								}
							]
						}
					],
					"description": "The Miscellaneous folder contains resources and tools for miscellaneous tasks, such as obtaining bank codes and checking the status of the Adjútor API service to ensure that it is functioning properly. This folder provides a convenient way to access information and troubleshoot any issues, helping you stay informed and in control of your system at all times."
				}
			],
			"description": "These endpoints are a collection of APIs to be used by a lender or an integrator to get information about their accounts, profiles, and wallet balances.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Direct Debit",
			"item": [
				{
					"name": "Banks",
					"item": [
						{
							"name": "Get All Banks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}direct-debit/banks?limit=100&page=1&sort_dir=ASC",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"banks"
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort_dir",
											"value": "ASC"
										}
									]
								},
								"description": "This endpoints returns the lis of banks able to provide direct debit authorizations on their customers' accounts.\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| id | `Integer` | Unique identifier for the bank. |\n| name | `string` | Name of the bank. |\n| bank_code | `string` | This is the CBN code associated with the bank. It is usually 3 digits for commercial banks and 5 digits for microfinance banks. |\n| institution_code | `string` | This is the NIBSS code associated with the bank. It is is usually 6 digits long. For commercial banks, the code is in the format 0000XX where X is from 0 to 99. |\n| url | `string` | URL pointing to the bank's logo or image. |"
							},
							"response": [
								{
									"name": "Get All Banks",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}direct-debit/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "713b4442-1cf6-46bb-8a39-85de0ad54d89"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 27 Mar 2024 16:28:29 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6395"
										},
										{
											"key": "ETag",
											"value": "W/\"18fb-Pj1/ZMbxWk/ZZFF1vrvEYAOh3tM\""
										},
										{
											"key": "Date",
											"value": "Wed, 27 Mar 2024 16:28:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"name\": \"Access Bank\",\n                \"bank_code\": \"044\",\n                \"institution_code\": \"000014\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/044.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 7,\n                \"name\": \"Ecobank Nigeria\",\n                \"bank_code\": \"050\",\n                \"institution_code\": \"000010\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/050.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 11,\n                \"name\": \"Fidelity Bank\",\n                \"bank_code\": \"070\",\n                \"institution_code\": \"000007\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/070.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 10,\n                \"name\": \"First Bank of Nigeria\",\n                \"bank_code\": \"011\",\n                \"institution_code\": \"000016\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/011.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 12,\n                \"name\": \"First City Monument Bank\",\n                \"bank_code\": \"214\",\n                \"institution_code\": \"000003\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/214.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 16,\n                \"name\": \"Guaranty Trust Bank\",\n                \"bank_code\": \"058\",\n                \"institution_code\": \"000013\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/058.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 18,\n                \"name\": \"Keystone Bank\",\n                \"bank_code\": \"082\",\n                \"institution_code\": \"000002\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/082.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 22,\n                \"name\": \"Kuda Bank\",\n                \"bank_code\": \"50211\",\n                \"institution_code\": \"090267\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/50211.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 25,\n                \"name\": \"Polaris Bank\",\n                \"bank_code\": \"076\",\n                \"institution_code\": \"000008\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/076.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 24,\n                \"name\": \"Providus Bank\",\n                \"bank_code\": \"101\",\n                \"institution_code\": \"000023\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/101.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 27,\n                \"name\": \"Stanbic IBTC Bank\",\n                \"bank_code\": \"221\",\n                \"institution_code\": \"000012\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/221.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 28,\n                \"name\": \"Standard Chartered Bank\",\n                \"bank_code\": \"068\",\n                \"institution_code\": \"000021\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/068.png\",\n                \"activation_amount\": \"100.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":100,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 29,\n                \"name\": \"Sterling Bank\",\n                \"bank_code\": \"232\",\n                \"institution_code\": \"000001\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/232.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 34,\n                \"name\": \"Suntrust Bank\",\n                \"bank_code\": \"100\",\n                \"institution_code\": \"000022\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/100.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 36,\n                \"name\": \"Union Bank of Nigeria\",\n                \"bank_code\": \"032\",\n                \"institution_code\": \"000018\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/032.png\",\n                \"activation_amount\": \"100.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":100,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 40,\n                \"name\": \"United Bank For Africa\",\n                \"bank_code\": \"033\",\n                \"institution_code\": \"000004\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/033.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 37,\n                \"name\": \"Unity Bank\",\n                \"bank_code\": \"215\",\n                \"institution_code\": \"000011\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/215.png\",\n                \"activation_amount\": \"100.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":100,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 2,\n                \"name\": \"Wema Bank\",\n                \"bank_code\": \"035\",\n                \"institution_code\": \"000017\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/035.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            },\n            {\n                \"id\": 41,\n                \"name\": \"Zenith Bank\",\n                \"bank_code\": \"057\",\n                \"institution_code\": \"000015\",\n                \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/057.png\",\n                \"activation_amount\": \"50.00\",\n                \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n            }\n        ],\n        \"meta\": {\n            \"records\": 19,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"100\"\n        }\n    },\n    \"meta\": {\n        \"cost\": 1,\n        \"balance\": 1010\n    }\n}"
								}
							]
						},
						{
							"name": "Get Details of a Bank",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}direct-debit/banks/:bank_id",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"banks",
										":bank_id"
									],
									"variable": [
										{
											"key": "bank_id",
											"value": "1"
										}
									]
								},
								"description": "Retrieve the details of a specific account.\n\n#### Query Params\n\n| Field | Type | Description |\n| --- | --- | --- |\n| bank_id | `Integer` | **Required**. The ID of the bank you want to get the details of. |\n\n#### Response Body Field\n\n| Field | Type | Description |\n| --- | --- | --- |\n| status | `string` | The status of the response. |\n| message | `string` | A message indicating the result of the operation. |\n| data | `object` | The data object contains specific information related to the response. |\n| ID | `number` | The ID associated with the bank. |\n| bank | `string` | The name of the bank. |\n| bank_code | `string` | The bank code associated with the bank. |\n| institutional_code | `string` | The institution code associated with the bank. |\n| url | `string` | The URL pointing to the bank's logo image |"
							},
							"response": [
								{
									"name": "Get Details of a Bank",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}direct-debit/banks/:bank_id",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "c711d34d-4378-472a-a43c-5a603a435c21"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 27 Mar 2024 16:48:19 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "403"
										},
										{
											"key": "ETag",
											"value": "W/\"193-NjjN04voJ7aLorbmK2F0o9mtDHg\""
										},
										{
											"key": "Date",
											"value": "Wed, 27 Mar 2024 16:48:22 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Access Bank\",\n        \"bank_code\": \"044\",\n        \"institution_code\": \"000014\",\n        \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/044.png\",\n        \"activation_amount\": \"50.00\",\n        \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n    },\n    \"meta\": {\n        \"cost\": 1,\n        \"balance\": 1010\n    }\n}"
								}
							]
						},
						{
							"name": "Verify Bank Account Number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2200000000\",\n    \"bank_code\": \"057\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}direct-debit/banks/account-lookup",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"banks",
										"account-lookup"
									]
								},
								"description": "This endpoint is used to verify the validity and details of a Nigerian account number.\n\n#### Request Body Field\n\n| Field | Type | Description |\n| --- | --- | --- |\n| account_number | `string` | **Required**. A valid `NUBAN` account number which must be 10 digits. |\n| bank_id | `integer` | **Required**. Identifier of the bank to which the account belongs. |\n\n#### Response Body Field\n\n| Field | Type | Description |\n| --- | --- | --- |\n| account_name | `string` | Name of the account holder associated with the account number. |\n| bvn | `string` | Masked Bank Verification Number (BVN) associated with the account holder. If the BVN on the account is 22222222222 then it will be shown as 22000000022 |\n| session_id | `string` | Session ID or identifier associated with the account lookup operation. |"
							},
							"response": [
								{
									"name": "Verify Bank Account Number",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"bank_code\": \"057\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}direct-debit/banks/account-lookup",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"banks",
												"account-lookup"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "ea9bc497-d658-4848-9906-d4d2c5274bcf"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 27 Mar 2024 16:50:07 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "186"
										},
										{
											"key": "ETag",
											"value": "W/\"ba-/00MCsOg6ox3KzdLPt8n1Zi280k\""
										},
										{
											"key": "Date",
											"value": "Wed, 27 Mar 2024 16:50:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"220000000099\",\n        \"session_id\": \"999999230427160615129743771734\"\n    },\n    \"meta\": {\n        \"cost\": 1,\n        \"balance\": 1010\n    }\n}"
								}
							]
						}
					],
					"description": "These endpoints are used to get the list of Nigerian banks, details of specific banks. They can also be used to bank account verification.\n\n#### Note\n\nNot all banks are included as some banks have either not implemented their direct debit service, or they return DO NOT HONOR on direct debit requests.\n\nIf a bank is missing, please email [support@lendsqr.com](https://mailto:support@lendsqr.com) for assistance or more details."
				},
				{
					"name": "Mandates",
					"item": [
						{
							"name": "Create Mandate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"0123456789\",\n    \"phone_number\": \"08123456789\",\n    \"debit_type\": \"all\",\n    \"bank_code\": \"057\",\n    \"email\": \"kadridamilola2@gmail.com\",\n    \"start_date\": \"2024-08-12\",\n    \"end_date\": \"2025-12-31\",\n    \"narration\": \"Mandate for computer loan\",\n    \"address\": \"69 Somewhere Street, Ebutte Metta Lagos\",\n    \"amount\": 50000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}direct-debit/mandates",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"mandates"
									]
								},
								"description": "This endpoint allows you to create a mandate on a customer's account. The default mandate type is the emandate, which customer can easily activate by themselves.\n\n#### Creating a manual direct debit mandate\n\nHowever, you can also create a manual mandate, which includes scanned written authorization by the bank.\n\nThe use case for this may be creation of mandates on a joint account requiring more than one signatory or a company account where the company instructions specify how instructions must be handled.\n\nWhen creating a manual mandate, there are a few things to note:\n\n- You must have an irrefutable document from a customer, duly signed off, that provides you with the authorization to create a mandate. This document, which should be a PDF or a PNG, would be converted to Base64 when creating the mandate.\n    \n- The manual mandate is immediate sent to the customer banks. However, banks may delay to approve this, therefore, the customer may have to follow up on their banks to get this approved on the system.\n    \n\n#### Request Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| account_number | `string` | **Required.** Customer NUBAN account number to create the mandate against |\n| phone_number | `string` | **Required.** The phone number of the customer. The number should be in the form `08012345678`.  <br>  <br>The customer's bank may validate this phone number against what they have on record. Therefore you are advised to use the number that the customer uses to receive SMS messages from their bank. |\n| debit_type | `string` | **Required.** The type of debit which may be `all` or `partial`.  <br>  <br>When set to `all` the system will try to debit the full amount due and when set to `partial` the system will try as much as possible to debit whatever amount can be recover from the customer account.  <br>  <br>The `partial` method is useful for loan repayments. |\n| frequency | `string` | The frequency of debiting the mandates. (`daily`, `weekly`, `monthly`)  <br>`required` if the |\n| bank_id | `Number` | **Required.** The `id` of the bank of the customer bank, is obtained from the Get Bank endpoint. |\n| email | `string` | **Required.** Customer email address. |\n| start_date | `string` | **Required.** The `start date` of the mandate. A mandate cannot be trigger for transactions before the `start date`. |\n| end_date | `string` | **Required.** The `end date` of the mandate. The mandate will expire on the last day. |\n| narration | `string` | **Required.** The narration or description of the mandate. |\n| address | `string` | **Required.** Customer address. |\n| amount | `Number` | **Required**. The maximum amount that can be debited on the mandate at a single time. However, the total amount debited against a mandate depends on how frequent the API to debit a mandate is called.  <br>  <br>Therefore, in theory, the total amount debited against a mandate may be multiples of the maximum amount that can be debited at once. |\n| schedule | `Boolean` | Indicates whether the transaction is scheduled (true) or not (false). |\n| type | `string` | Indicates whether the mandate is an e-mandate (emandate) or a manual mandate (manual). |\n| file_base64 | `string` | **Required.** The Base64 encoded data equivalent to the customer's mandate letter. |\n| file_extension | `string` | **`optional`****.** The extension of the file that has been added as a base64 data. It is usually `pdf` or `png`. |\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| id | `Integer` | The ID of the created mandate. |\n| account_number | `string` | The account number associated with the mandate. |\n| reference_number | `string` | A reference number assigned to the mandate. |\n| account_name | `string` | The account name associated with the mandate. |\n| frequency | `string` | The frequency of the mandate (e.g., \"daily\", \"weekly\", \"monthly\"). |\n| bvn | `string` | The Bank Verification Number (BVN) associated with the mandate. |\n| phone_number | `string` | The phone number associated with the mandate. |\n| email | `string` | The email address associated with the mandate. |\n| start_date | `string` | The start date of the mandate. |\n| end_date | `string` | The end date of the mandate. |\n| narration | `string` | The narration or description of the mandate. |\n| address | `string` | The address associated with the mandate. |\n| amount | `string` | The amount associated with the mandate. |\n| status | `string` | The status of the mandate (e.g., \"initiated\", \"active\", \"inactive\"). |\n| workflow_status | `string` | The workflow status of the mandate. |\n| debit_type | `string` | The debit type of the mandate (e.g., \"all\" or \"partial\"). |\n| type | `string` | The type of the mandate (e.g., \"emandate\" or \"manual\"). |\n| schedule | `Boolean` | Indicates whether the transaction is scheduled (true) or not (false). |\n| created_on | `string` | The date and time when the mandate was created in ISO 8601 format. |"
							},
							"response": [
								{
									"name": "Create E-Mandate",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"0123456789\",\n    \"phone_number\": \"08123456789\",\n    \"debit_type\": \"all\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"email@example.com\",\n    \"number_of_payments\": 6,\n    \"payment_start_date\": \"2023-11-01\",\n    \"start_date\": \"2023-11-01\",\n    \"end_date\": \"2023-12-30\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"invite\": true,\n    \"amount\": 500,\n    \"type\": \"emandate\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}direct-debit/mandates",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"mandates"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "701"
										},
										{
											"key": "ETag",
											"value": "W/\"2bd-ZnQe3lfyVlBwwznxkAAsV8MX24A\""
										},
										{
											"key": "Date",
											"value": "Fri, 27 Oct 2023 09:51:54 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Mandate created successfully\",\n    \"data\": {\n        \"id\": 55,\n        \"session_id\": \"999999230712125043396550293089\",\n        \"reference_number\": \"RC1153578/1234/999999999\",\n        \"account_number\": \"0123456789\",\n        \"account_name\": \"ADO JOHN SULE\",\n        \"frequency\": \"daily\",\n        \"bvn\": \"\",\n        \"phone_number\": \"08123456789\",\n        \"email\": \"email@example.com\",\n        \"start_date\": \"2023-10-31T23:00:00.000Z\",\n        \"end_date\": \"2023-12-29T23:00:00.000Z\",\n        \"narration\": \"Rand\",\n        \"address\": \"Ikate\",\n        \"minimum_amount\": \"0.00\",\n        \"amount\": \"500.00\",\n        \"status\": \"initiated\",\n        \"schedule\": 0,\n        \"type\": \"emandate\",\n        \"NIBSS_workflow_status\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"debit_type\": \"all\",\n        \"invite\": true,\n        \"created_on\": \"2023-10-27T08:51:38.000Z\",\n        \"activation_instruction\": \"This emandate is currently in initiated status. To activate, kindly send a N50.00 from the account on which the mandate is set up to undefined at undefined Bank. The activation must be done within 24 hours of set up.\",\n        \"schedules\": []\n    },\n    \"meta\": {\n        \"balance\": 1010\n    }\n}"
								}
							]
						},
						{
							"name": "Get All Mandates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}direct-debit/mandates?limit=10&page=1",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"mandates"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								},
								"description": "This endpoint is used to retrieve mandates or information for a specific mandate. The `reference_number` is the unique mandate ID generated when the mandate was created.\n\n#### Query Params\n\n| Field | Type | Description |\n| --- | --- | --- |\n| reference_number | `number` | **Required.** The reference number of the mandate you want to get the details of. |\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| file | `number` | **Required.** The reference number of the mandate you want to get the details of. |"
							},
							"response": [
								{
									"name": "Get All Mandates",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}direct-debit/mandates?limit=10&page=1",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"mandates"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "c5aac60f-faca-4ef8-b833-c8e33e49d55d"
										},
										{
											"key": "Last-Modified",
											"value": "Thu, 28 Mar 2024 01:39:18 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "19847"
										},
										{
											"key": "ETag",
											"value": "W/\"4d87-euutde1hC8uaGi+/KLj9cb0KDrk\""
										},
										{
											"key": "Date",
											"value": "Thu, 28 Mar 2024 01:39:22 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 10,\n                \"session_id\": \"999999231016152258600000000000\",\n                \"reference_number\": \"RC00000/1507/000000000000\",\n                \"account_number\": \"2150000090\",\n                \"account_name\": \"TEST ACCOUNT\",\n                \"frequency\": \"daily\",\n                \"bvn\": \"22000000076\",\n                \"phone_number\": \"08130050033\",\n                \"email\": \"email@example.com\",\n                \"start_date\": \"2023-10-31T23:00:00.000Z\",\n                \"end_date\": \"2023-12-29T23:00:00.000Z\",\n                \"narration\": \"Rand\",\n                \"address\": \"Ikate\",\n                \"minimum_amount\": \"0.00\",\n                \"amount\": \"500.00\",\n                \"status\": \"initiated\",\n                \"schedule\": 0,\n                \"type\": \"manual\",\n                \"NIBSS_workflow_status\": null,\n                \"NIBSS_workflow_status_description\": null,\n                \"debit_type\": \"all\",\n                \"created_on\": \"2023-10-16 14:22:59\",\n                \"schedules\": [],\n                \"bank\": {\n                    \"id\": 42,\n                    \"name\": \"Zenith Bank\",\n                    \"bank_code\": \"057\",\n                    \"institution_code\": \"000015\",\n                    \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/057.png\",\n                    \"meta\": {\n                        \"mandate-activation-amount\": 50,\n                        \"mandate-activation-bank\": \"Paystack-Titan\",\n                        \"mandate-activation-account-number\": \"9880218357\"\n                    }\n                },\n                \"beneficiary\": {\n                    \"id\": 2,\n                    \"account_number\": \"54000000000\",\n                    \"account_name\": \"DD OPERATIONS\",\n                    \"bvn\": \".\",\n                    \"last_transaction_date\": null,\n                    \"status\": \"active\",\n                    \"created_on\": \"2023-09-22 15:29:32\",\n                    \"bank\": {\n                        \"id\": 24,\n                        \"name\": \"Providus Bank\",\n                        \"bank_code\": \"101\",\n                        \"institution_code\": \"000023\",\n                        \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/101.png\"\n                    }\n                },\n                \"activation_instruction\": \"This mandate is currently in initiated status. To activate, the bank direct debit officers need to log into the NIBSS CMMS platform to authorize or approve. The customer may also call their bank account manager for more details.\"\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    },\n    \"meta\": {\n        \"cost\": 1,\n        \"balance\": 1010\n    }\n}"
								}
							]
						},
						{
							"name": "Get Mandate Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}direct-debit/mandates?reference_number={{reference_number}}",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"mandates"
									],
									"query": [
										{
											"key": "reference_number",
											"value": "{{reference_number}}"
										}
									]
								},
								"description": "Retrieves the details of a specific mandate.\n\n#### Query Params\n\n| Field | Type | Description |\n| --- | --- | --- |\n| reference_number | `string` | **Required.** The reference number of the mandate you want to get the details of. |\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| account_number | `string` | The account number associated with the mandate. |\n| account_name | `string` | The account name associated with the mandate. |\n| frequency | `string` | The frequency of the mandate (e.g., \"daily\", \"weekly\", \"monthly\"). |\n| bvn | `string` | The Bank Verification Number (BVN) associated with the mandate. |\n| phone_number | `string` | The phone number associated with the mandate. |\n| email | `string` | The email address associated with the mandate. |\n| start_date | `string` | The start date of the mandate. |\n| end_date | `string` | The end date of the mandate. |\n| narration | `string` | The narration or description of the mandate. |\n| address | `string` | The address associated with the mandate. |\n| amount | `string` | The amount associated with the mandate. |\n| status | `string` | The status of the mandate (e.g., \"initiated\", \"active\", \"inactive\", \"pending\"). |\n| workflow_status | `string` | The workflow status of the mandate. |\n| debit_type | `string` | The debit type of the mandate (e.g., \"All\" and \"Partial\"). |\n| created_on | `string` | The date and time when the mandate was created. |\n| bank.name | `string` | The name of the bank associated with the mandate. |\n| bank.bank_code | `string` | The bank code of the bank associated with the mandate. |\n| bank.institution_code | `string` | The institution code of the bank associated with the mandate. |\n| bank.url | `string` | The URL of the bank associated with the mandate. |"
							},
							"response": [
								{
									"name": "Get Mandate Details",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}direct-debit/mandates?reference_number={{reference_number}}",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"mandates"
											],
											"query": [
												{
													"key": "reference_number",
													"value": "{{reference_number}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "e6e32b70-8398-481c-92d0-88f44d86443c"
										},
										{
											"key": "Last-Modified",
											"value": "Thu, 28 Mar 2024 01:43:32 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1955"
										},
										{
											"key": "ETag",
											"value": "W/\"7a3-tUM5qNNXuFjp/db/6nT7xLHaYkA\""
										},
										{
											"key": "Date",
											"value": "Thu, 28 Mar 2024 01:43:36 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 29,\n                \"session_id\": \"999999230614194314842810401824\",\n                \"reference_number\": \"0000004/001/999999999\",\n                \"account_number\": \"0123456789\",\n                \"account_name\": \"vee Test\",\n                \"frequency\": \"daily\",\n                \"bvn\": \"220000000099\",\n                \"phone_number\": \"0123456789\",\n                \"email\": \"email@example.com\",\n                \"start_date\": \"2023-01-01\",\n                \"end_date\": \"2025-12-31\",\n                \"narration\": \"Rand\",\n                \"address\": \"Ikate\",\n                \"minimum_amount\": \"0.00\",\n                \"amount\": \"50.00\",\n                \"status\": \"inactive\",\n                \"workflow_status\": \"2\",\n                \"debit_type\": \"all\",\n                \"created_on\": \"2023-06-14 19:43:20\",\n                \"bank\": {\n                    \"id\": 42,\n                    \"name\": \"Zenith Bank\",\n                    \"bank_code\": \"057\",\n                    \"institution_code\": \"000015\",\n                    \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/057.png\",\n                    \"meta\": {\n                        \"mandate-activation-amount\": 50,\n                        \"mandate-activation-bank\": \"Paystack-Titan\",\n                        \"mandate-activation-account-number\": \"9880218357\"\n                    }\n                },\n                \"activation_instruction\": \"This mandate is currently in initiated status. To activate, the bank direct debit officers need to log into the NIBSS CMMS platform to authorize or approve. The customer may also call their bank account manager for more details.\"\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    },\n    \"meta\": {\n        \"cost\": 1,\n        \"balance\": 1010\n    }\n}"
								}
							]
						},
						{
							"name": "Get Mandate Summary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}direct-debit/mandates/stats",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"mandates",
										"stats"
									]
								},
								"description": "This endpoints provides the summary of all mandates within the system.\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| status | `string` | Mandate status (e.g., active, inactive) |\n| count | `number` | The count of each mandate status. |\n| data | `array` | An array containing objects with status and count information for different mandate statuses. |"
							},
							"response": []
						},
						{
							"name": "Cancel a mandate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reference_number\": \"0000004/001/0000073969\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}direct-debit/mandates/cancel",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"mandates",
										"cancel"
									]
								},
								"description": "Updates the status of a mandate\n\n#### Query Params\n\n| Field | Type | Description |\n| --- | --- | --- |\n| type | `string` | **Required**.The status you want to update the mandate. (`activate`/`deactivate)` to which |\n\n#### Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| reference_number | `string` | The reference number of the mandate to activate or deactivate |\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| status | `string` | The status of the response. |\n| message | `string` | A message indicating the result of the update. |"
							},
							"response": [
								{
									"name": "Cancel a Mandate",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"reference_number\": \"0000004/001/0000073969\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}direct-debit/mandates/cancel",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"mandates",
												"cancel"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 06:55:25 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"meta\": {\n        \"balance\": 1010\n    }\n}"
								}
							]
						},
						{
							"name": "Debit a Mandate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reference_number\": \"0000004/001/0000073969\",\n    \"amount\": 40,\n    \"narration\": \"This is a test narration\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}direct-debit/mandates/debit",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"mandates",
										"debit"
									]
								},
								"description": "This endpoint enables you to perform a debit on a customer's account using an authorized mandate. For this to happen, these are the prerequisites:\n\n- The mandate must have been created on the profile of that the API credentials are attached to\n- The mandate must have been authorized or validated by the customer's bank\n- The mandate start date must be in the past and the expiry date in the future\n    \n\nFor a mandate to be debited successfully:\n\n- The customer's account must be in good standing at their bank. For example, their bank account cannot be dormant\n- The customer's account must have enough funds to carry the debit. Mandates cannot force debit an account\n    \n\n#### Request Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| reference_number | String | **Required.** The reference number assigned to the mandate. |\n| amount | Number | **Required.** The amount to be debited on the mandate. |\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| status | String | The overall status of the response. |\n| message | String | A message providing additional information about the response status. For example, \"Mandate debited successfully\". |\n| status | String | The status of the specific mandate transaction. Possible values: \"successful\", \"failed\", etc. |\n| amount | String | The amount debited in the mandate transaction. |\n| reference | String | A unique reference identifier for the mandate transaction. |"
							},
							"response": [
								{
									"name": "Debit Mandate",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"reference_number\": \"0000004/001/0000073969\",\n    \"amount\": 500\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}direct-debit/mandates/debit",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"mandates",
												"debit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 19 Jul 2023 16:58:00 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "143"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "openresty"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "996"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "ETag",
											"value": "W/\"8f-Ua6YyVhqZrS5Mi38nnlKRyEIgsE\""
										},
										{
											"key": "Age",
											"value": "9"
										},
										{
											"key": "Via",
											"value": "http/1.1 api-umbrella (ApacheTrafficServer [cMsSf ])"
										},
										{
											"key": "X-Cache",
											"value": "MISS"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Mandate debited successfully\",\n    \"data\": {\n        \"status\": \"successful\",\n        \"amount\": \"500.00\",\n        \"reference\": \"DD-SHFhaf1ycS80gG5\"\n    },\n    \"meta\": {\n        \"balance\": 1010\n    }\n}"
								}
							]
						},
						{
							"name": "Check Account Balance",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reference_number\": \"0000004/001/0000073969\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}direct-debit/banks/balance-lookup",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"banks",
										"balance-lookup"
									]
								},
								"description": "Retrieves the balance of the account associated with a mandate\n\n#### Request Body Field\n\n| Field | Type | Description |\n| --- | --- | --- |\n| reference_number | String | **Required**. A reference number assigned to the mandate. |\n\n#### Response Body Field\n\n| Field | Type | Description |\n| --- | --- | --- |\n| status | String | The overall status of the response |\n| message | String | A message providing additional information about the response status. |\n| balance | Number | The account balance value. |"
							},
							"response": [
								{
									"name": "Balance Lookup",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"reference_number\": \"0000004/001/0000073969\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}direct-debit/banks/balance-lookup",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"banks",
												"balance-lookup"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 20 Jul 2023 17:07:15 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Server",
											"value": "openresty"
										},
										{
											"key": "X-RateLimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-RateLimit-Remaining",
											"value": "991"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "ETag",
											"value": "W/\"34-/OD9Mkr2oMb6kI5JzrqiWEkDqrM\""
										},
										{
											"key": "Age",
											"value": "2"
										},
										{
											"key": "Via",
											"value": "http/1.1 api-umbrella (ApacheTrafficServer [cMs f ])"
										},
										{
											"key": "X-Cache",
											"value": "MISS"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"balance\": 22785.71\n    },\n    \"meta\": {\n        \"balance\": 1010\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Transactions",
					"item": [
						{
							"name": "Get All Transactions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}direct-debit/transactions?limit=10&page=1",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"transactions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								},
								"description": "Retrieve the transactions related to the mandates associated with the API key.\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| id | `integer` | The ID of the transaction. |\n| amount | String | The amount of the transaction. |\n| mandate_id | `integer` | The ID of the associated mandate. |\n| mandate_account_name | String | The account name associated with the mandate. |\n| mandate_account_number | `integer` | The account number associated with the mandate. |\n| mandate_bvn | String | The Bank Verification Number (BVN) associated with the mandate. |\n| reference | String | The reference number of the transaction. |\n| narration | String | The description or purpose of the transaction. |\n| beneficiary_id | `integer` | The ID of the recipient of the mandate debits. |\n| beneficiary_account_name | String | The account name of the recipient of the mandate debits. |\n| beneficiary_account_number | `integer` | The account number of the recipient of the mandate debits. |\n| beneficiary_bvn | String | The Bank Verification Number (BVN) of the beneficiary. |\n| session_id | String | The session ID associated with the transaction. |\n| status | String | The status of the transaction (e.g., success, failed). |\n| created_on | String | The date and time when the transaction was created. |\n| mandate_bank | `object` | The bank details associated with the mandate (see bank fields below). |\n\n#### Mandate Bank Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| id | `integer` | The ID of the bank. |\n| name | String | The name of the bank. |\n| bank_code | String | The bank code associated with the bank. |\n| institution_code | String | The institution code associated with the bank. |\n| url | String | The URL of the bank (if available). |"
							},
							"response": [
								{
									"name": "Get All Transactions",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}direct-debit/transactions?limit=10&page=1",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"transactions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "9c990955-2d05-463a-9968-8d8ef8aef90d"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 27 Mar 2024 17:05:10 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "7731"
										},
										{
											"key": "ETag",
											"value": "W/\"1e33-JscIFlPIDztpaYzPXGIWueotanI\""
										},
										{
											"key": "Date",
											"value": "Wed, 27 Mar 2024 17:05:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 15,\n                \"amount\": \"500\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_account_number\": \"1780004070\",\n                \"mandate_bvn\": \"22222222222\",\n                \"reference\": \"DD-cU26qsOsdGCSGn\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"session_id\": \"999999230920215225299534241477\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 07:07:01\",\n                \"mandate_bank\": {\n                    \"name\": \"Test Bank 1\",\n                    \"bank_code\": \"998\",\n                    \"institution_code\": \"999998\",\n                    \"url\": null\n                },\n                \"mandate\": {\n                    \"reference_number\": \"RC1145578/1599/000000000\"\n                }\n            },\n            {\n                \"id\": 14,\n                \"amount\": \"500\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_account_number\": \"1780004070\",\n                \"mandate_bvn\": \"22222222222\",\n                \"reference\": \"DD-cU26qsO05mGCSGn\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"session_id\": \"999999230920215225299534241477\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 07:07:01\",\n                \"mandate_bank\": {\n                    \"name\": \"Test Bank 1\",\n                    \"bank_code\": \"998\",\n                    \"institution_code\": \"999998\",\n                    \"url\": null\n                },\n                \"mandate\": {\n                    \"reference_number\": \"RC1145578/1599/000000000\"\n                }\n            },\n            {\n                \"id\": 13,\n                \"amount\": \"500\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_account_number\": \"1780004070\",\n                \"mandate_bvn\": \"22222222222\",\n                \"reference\": \"DD-cU26qsdmGCSgGn\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"session_id\": \"999999230920215225299534241477\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 07:07:01\",\n                \"mandate_bank\": {\n                    \"name\": \"Test Bank 1\",\n                    \"bank_code\": \"998\",\n                    \"institution_code\": \"999998\",\n                    \"url\": null\n                },\n                \"mandate\": {\n                    \"reference_number\": \"RC1145578/1599/000000000\"\n                }\n            },\n            {\n                \"id\": 12,\n                \"amount\": \"500\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_account_number\": \"1780004070\",\n                \"mandate_bvn\": \"22222222222\",\n                \"reference\": \"DD-cU26qsO05mGCSGn\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"session_id\": \"999999230920215225299534241477\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 07:07:01\",\n                \"mandate_bank\": {\n                    \"name\": \"Test Bank 1\",\n                    \"bank_code\": \"998\",\n                    \"institution_code\": \"999998\",\n                    \"url\": null\n                },\n                \"mandate\": {\n                    \"reference_number\": \"RC1145578/1599/000000000\"\n                }\n            },\n            {\n                \"id\": 11,\n                \"amount\": \"500\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_account_number\": \"1780004070\",\n                \"mandate_bvn\": \"22222222222\",\n                \"reference\": \"DD-cU26qsO05mGCSGn\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"session_id\": \"999999230920215225299534241477\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 07:07:01\",\n                \"mandate_bank\": {\n                    \"name\": \"Test Bank 1\",\n                    \"bank_code\": \"998\",\n                    \"institution_code\": \"999998\",\n                    \"url\": null\n                },\n                \"mandate\": {\n                    \"reference_number\": \"RC1145578/1599/000000000\"\n                }\n            },\n            {\n                \"id\": 10,\n                \"amount\": \"500\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_account_number\": \"1780004070\",\n                \"mandate_bvn\": \"22222222222\",\n                \"reference\": \"DD-cU26qsO05mGCSGn\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"session_id\": \"999999230920215225299534241477\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 07:07:01\",\n                \"mandate_bank\": {\n                    \"name\": \"Test Bank 1\",\n                    \"bank_code\": \"998\",\n                    \"institution_code\": \"999998\",\n                    \"url\": null\n                },\n                \"mandate\": {\n                    \"reference_number\": \"RC1145578/1599/000000000\"\n                }\n            },\n            {\n                \"id\": 9,\n                \"amount\": \"500\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_account_number\": \"1780004070\",\n                \"mandate_bvn\": \"22222222222\",\n                \"reference\": \"DD-cU26qsO05mGCSGn\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"session_id\": \"999999230920215225299534241477\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 07:07:01\",\n                \"mandate_bank\": {\n                    \"name\": \"Test Bank 1\",\n                    \"bank_code\": \"998\",\n                    \"institution_code\": \"999998\",\n                    \"url\": null\n                },\n                \"mandate\": {\n                    \"reference_number\": \"RC1145578/1599/000000000\"\n                }\n            },\n            {\n                \"id\": 8,\n                \"amount\": \"500\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_account_number\": \"1780004070\",\n                \"mandate_bvn\": \"22222222222\",\n                \"reference\": \"DD-cU26qsO05mGCSGn\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"session_id\": \"999999230920215225299534241477\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 07:07:01\",\n                \"mandate_bank\": {\n                    \"name\": \"Test Bank 1\",\n                    \"bank_code\": \"998\",\n                    \"institution_code\": \"999998\",\n                    \"url\": null\n                },\n                \"mandate\": {\n                    \"reference_number\": \"RC1145578/1599/000000000\"\n                }\n            },\n            {\n                \"id\": 7,\n                \"amount\": \"500\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_account_number\": \"1780004070\",\n                \"mandate_bvn\": \"22222222222\",\n                \"reference\": \"DD-cU26qsO05mGCSGn\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"session_id\": \"999999230920215225299534241477\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 07:07:01\",\n                \"mandate_bank\": {\n                    \"name\": \"Test Bank 1\",\n                    \"bank_code\": \"998\",\n                    \"institution_code\": \"999998\",\n                    \"url\": null\n                },\n                \"mandate\": {\n                    \"reference_number\": \"RC1145578/1599/000000000\"\n                }\n            },\n            {\n                \"id\": 6,\n                \"amount\": \"500\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_account_number\": \"1780004070\",\n                \"mandate_bvn\": \"22222222222\",\n                \"reference\": \"DD-cU26qsO05mGCSGn\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"session_id\": \"999999230920215225299534241477\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 07:07:01\",\n                \"mandate_bank\": {\n                    \"name\": \"Test Bank 1\",\n                    \"bank_code\": \"998\",\n                    \"institution_code\": \"999998\",\n                    \"url\": null\n                },\n                \"mandate\": {\n                    \"reference_number\": \"RC1145578/1599/000000000\"\n                }\n            }\n        ],\n        \"meta\": {\n            \"records\": 15,\n            \"page\": \"1\",\n            \"pages\": 2,\n            \"page_size\": \"10\"\n        }\n    },\n    \"meta\": {\n        \"cost\": 1,\n        \"balance\": 1010\n    }\n}"
								}
							]
						},
						{
							"name": "Get Details of a Transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}direct-debit/transactions?reference=DD-cU26qsO05mGCSGn",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"transactions"
									],
									"query": [
										{
											"key": "reference",
											"value": "DD-cU26qsO05mGCSGn"
										}
									]
								},
								"description": "Retrieves the details of a specific transaction.\n\n#### Params Query\n\n| Field | Type | Description |\n| --- | --- | --- |\n| reference | String | **Required**. The reference number of the mandate transaction you want to get the details of. |\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| id | `integer` | The ID of the transaction. |\n| amount | String | The amount of the transaction. |\n| mandate_id | `integer` | The ID of the associated mandate. |\n| mandate_account_name | String | The account name associated with the mandate. |\n| mandate_account_number | `integer` | The account number associated with the mandate. |\n| mandate_bvn | String | The Bank Verification Number (BVN) associated with the mandate. |\n| reference | String | The reference number of the transaction. |\n| narration | String | The description or purpose of the transaction. |\n| beneficiary_id | `integer` | The ID of the recipient of the mandate debits. |\n| beneficiary_account_name | String | The account name of the recipient of the mandate debits. |\n| beneficiary_account_number | `integer` | The account number of the recipient of the mandate debits. |\n| beneficiary_bvn | String | The Bank Verification Number (BVN) of the beneficiary. |\n| session_id | String | The session ID associated with the transaction. |\n| status | String | The status of the transaction (e.g., success, failed). |\n| created_on | String | The date and time when the transaction was created. |\n| mandate_bank | `object` | The bank details associated with the mandate (see bank fields below). |\n\n##### Mandate Bank Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| id | `integer` | The ID of the bank. |\n| name | String | The name of the bank. |\n| bank_code | String | The bank code associated with the bank. |\n| institution_code | String | The institution code associated with the bank. |\n| url | String | The URL of the bank (if available). |"
							},
							"response": [
								{
									"name": "Get Details of a Transaction",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}direct-debit/transactions?reference=DD-WCo3KTTUn1dZgAV",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"transactions"
											],
											"query": [
												{
													"key": "reference",
													"value": "DD-WCo3KTTUn1dZgAV"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "203650f6-fee5-4452-baec-6779de722573"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 27 Mar 2024 17:07:36 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "904"
										},
										{
											"key": "ETag",
											"value": "W/\"388-xErTWr+FkJV09fWlwB7b45G78l4\""
										},
										{
											"key": "Date",
											"value": "Wed, 27 Mar 2024 17:07:38 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2592,\n                \"amount\": \"250.00\",\n                \"mandate_id\": 478,\n                \"mandate_account_name\": \"AKINSANYA ADEOLUWA OLORUNTOMI\",\n                \"mandate_account_number\": \"0421008622\",\n                \"mandate_bvn\": \"22000000076\",\n                \"reference\": \"DD-WCo3KTTUn1dZgAV\",\n                \"narration\": \"Direct debit for mandate schedule 699\",\n                \"session_id\": \"110069240327000044440000237994\",\n                \"status\": \"failed\",\n                \"created_on\": \"2024-03-26 23:00:35\",\n                \"mandate_bank\": {\n                    \"id\": 16,\n                    \"name\": \"Guaranty Trust Bank\",\n                    \"bank_code\": \"058\",\n                    \"institution_code\": \"000013\",\n                    \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/058.png\",\n                    \"activation_amount\": \"50.00\",\n                    \"meta\": \"{\\\"mandate-activation-amount\\\":50,\\\"mandate-activation-bank\\\":\\\"Paystack-Titan\\\",\\\"mandate-activation-account-number\\\":\\\"9880218357\\\"}\"\n                },\n                \"mandate\": {\n                    \"reference_number\": \"RC1544159/1517/0001380571\"\n                }\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    },\n    \"meta\": {\n        \"cost\": 1,\n        \"balance\": 1010\n    }\n}"
								}
							]
						},
						{
							"name": "Get Transactions Statistics",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"verify that the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.test(\"verify that the response has a 'message'\", function () {\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}direct-debit/transactions/stats",
									"host": [
										"{{base_url}}direct-debit"
									],
									"path": [
										"transactions",
										"stats"
									]
								},
								"description": "Retrieves the status of transactions associated with the API key.\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| status | String | The status of the mandate transactions. |\n| count | `integer` | The number of transactions with the given status. |"
							},
							"response": [
								{
									"name": "Get Transactions Statistics",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}direct-debit/transactions/stats",
											"host": [
												"{{base_url}}direct-debit"
											],
											"path": [
												"transactions",
												"stats"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "X-Request-ID",
											"value": "c83440b7-01c1-42a4-820e-b6245d9ce099"
										},
										{
											"key": "Last-Modified",
											"value": "Wed, 27 Mar 2024 19:06:19 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "241"
										},
										{
											"key": "ETag",
											"value": "W/\"f1-1aQUzxdJeUage6Rli20oLe1CC2I\""
										},
										{
											"key": "Date",
											"value": "Wed, 27 Mar 2024 19:06:22 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"transactions\": [\n            {\n                \"status\": \"total\",\n                \"count\": 36,\n                \"sum\": \"8850.00\"\n            },\n            {\n                \"status\": \"successful\",\n                \"count\": 1,\n                \"sum\": \"100.00\"\n            },\n            {\n                \"status\": \"failed\",\n                \"count\": 35,\n                \"sum\": \"8750.00\"\n            }\n        ]\n    },\n    \"meta\": {\n        \"cost\": 1,\n        \"balance\": 1010\n    }\n}"
								}
							]
						}
					]
				}
			],
			"description": "## Getting started\n\nDirect debit is a payment method that allows an account holder to grant authorization for a biller or lender to take money from their bank account for services as of when due. Direct debit is similar to debit cards in its ability to debit a customer’s account with prior authorization.\n\nDirect debit helps businesses that require recurring payments on specific dates with fixed amounts, such as insurance premiums, loan repayments, service subscriptions, or variable recurring payments on different dates (e.g., postpaid lines, and electricity usage).\n\nThis direct debit API facilitates the process for Service Providers (referred to as Billers) to generate debit mandate instructions on their client's/customers' bank accounts for services rendered or products sold.\n\nThese debit mandate instructions are created as digital versions of physical instructions duly signed by the account owners (clients/customers). Once generated, the mandate instructions are automatically sent to the bank where the account is held for review and approval. The approval process requires the bank to contact the account owner to authorize the mandate, which typically takes 24 to 48 hours.\n\nThe system automatically assigns a unique mandate code to each initiated mandate. This mandate code is used to initiate a direct debit transaction on the bank account associated with the debit mandate instruction.\n\nThis document provides a comprehensive overview and detailed specifications of the Direct Debit APIs, including all the necessary information for seamless integration into your respective applications.\n\n## Direct debit process\n\nDirect debit mandates follow a streamlined process that may take at least 2 hours from activation to when they are available for debits. These steps are:\n\n- Mandate creation\n- Mandate activation\n- Setup for debit\n- Transactions\n    \n\n### Mandate creation\n\nThe first step is the creation of mandate using the API defined in this collection. As soon as the mandate is created, you should inform the customer of the next steps about how to activate the mandate.\n\nFrom a best practices point of view, the customer should be informed on your app, by email, and SMS.\n\n### Mandate activation\n\nActivation of the mandate is usually done by the transfer of a N50 (or N100 for banks where the minimum transfer amount is N100) to designated bank accounts operated by NIBSS. The customer has 168 hours (7 days) to send this amount if not the mandate is automatically canceled.\n\nImmediately the activation amount is received at either of the banks, the mandate is automatically activated. However, it is not available for debit at this time.\n\n#### Banks for mandate activation\n\nThe following are the authorized banks which customers should use for direct debit mandate activation.\n\n| **Fidelity Bank** | **Paystack Titan** |\n| --- | --- |\n| Account: 9020025928  <br>Bank: Fidelity Bank Plc.  <br>You can transfer from USSD, mobile app or internet banking | Account: 9880218357  <br>Bank: Paystack-Titan  <br>You can transfer from your mobile app and internet banking |\n\n### Setup for debit\n\nThere are usually some backend processes done by NIBSS that then processes the accounts for debit and this may take up to 2 hours before completion. If you try to debit the mandate before this time, it would return an error message such as \"do not honor\".",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "sk_live_lgObHcTX3Fhc1XYxd8n1YxDflEFrhDjT5C1UCbbT",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://adjutor.lendsqr.com/v2/",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "x_access_token",
			"value": "",
			"type": "string"
		}
	]
}